<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title>AngryAnt.com/feed</title>
		<description>Random scribblings at random intervals</description>
		<link>http://angryant.com</link>
		
			<item>
				<title>Unite 13 video "Unity Hacks" available</title>
				<description>&lt;p&gt;The &amp;#8220;Unity Hacks&amp;#8221; presentation, containing a good cunk of practical tips &amp;amp; tricks and example code, I did for Unite 13 Korea, Japan, China and Nordic is now available as video and presentation/examples download. The specific video recording is the one from Unite Japan.&lt;/p&gt;
&lt;p&gt;Find link to video, presentation and examples in the &lt;a href=&quot;/videos&quot;&gt;videos&lt;/a&gt; section.&lt;/p&gt;</description>
				<published>2013-07-05 00:00:00 +0200</published>
				<link>http://angryant.com/2013/07/05/Unite-13-video-Unity-Hacks-available/</link>
			</item>
		
			<item>
				<title>The implicit local network interface</title>
				<description>&lt;p&gt;I foolishly promised I would resume my posting of tech stuff on this blog, so I suppose I better own up to that.&lt;/p&gt;
&lt;h1&gt;Story time&lt;/h1&gt;
&lt;p&gt;You are playing some amazingly addictive game on your iOS device when commuting home. Let&amp;#8217;s say it&amp;#8217;s a Mario clone.&lt;/p&gt;
&lt;p&gt;As you arrive home, you want more of this gaming goodness. So you switch on your television and use AirPlay to continue the game on your TV, controls on your iOS device, via your Apple TV or other AirServer hosting, TV connected, device.&lt;/p&gt;
&lt;p&gt;Now your good friend Bob comes by (you forgot to lock the door, so he walks straight in). Obviously this game is too good to put down, so in stead you instruct Bob to buy a copy of it. Bob pulls out his android phone, jumps on your wifi, downloads the game and starts playing.&lt;/p&gt;
&lt;p&gt;At one point in Bobs game he sees this funky spinning portal in the level and opts to tap it. And poof! Bobs character is sucked into your game on the TV.&lt;/p&gt;
&lt;p&gt;Unfortunately Bob is a terrible player of this game and ruins your score, but it was pretty cool to try this game in multiplayer mode.&lt;/p&gt;
&lt;h1&gt;Do want!&lt;/h1&gt;
&lt;p&gt;The above scenario may sound complex to set up, but like so many other cases, it is just a nice combination of simpler bits. So let&amp;#8217;s look into how we enable something like this in our (Unity based) game.&lt;/p&gt;
&lt;p&gt;First up, AirPlay support was recently added to Unity and I posted &lt;a href=&quot;https://gist.github.com/AngryAnt/5160204&quot;&gt;a gist&lt;/a&gt; to help people get started with it.&lt;/p&gt;
&lt;p&gt;Secondly, we need to host a network game pretty much all the time, so that others may join any ongoing session at any time. Of-course you might want to provide an opt-in/out setting for networked play in your game. Just remember that we are only enabling this feature for local network play &amp;#8211; not internet play like Journey did it.&lt;/p&gt;
&lt;p&gt;For information on how to easily set up this network game, see the talk I did at Unite 12 in Amsterdam: &amp;#8220;Unity, Network Code, and You&amp;#8221; &amp;#8211; the example provided for the built-in networking is quite relevant to the above example. You can find the talk linked from the &lt;a href=&quot;/videos/&quot;&gt;video&lt;/a&gt; section of this site.&lt;/p&gt;
&lt;p&gt;So with those parts in place, we just need a bit of glue &amp;#8211; namely the broadcasting of games on your local network. This gist deals with just that:&lt;br /&gt;
&lt;script src=&#39;https://gist.github.com/5730611.js?file=Broadcaster.cs&#39;&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;if (m_BroadcastTimer == null)
// Setup broadcast of hosting service
{
	m_BroadcastSocket = new Socket (AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);&lt;/p&gt;
&lt;p&gt;try&lt;br /&gt;
	{&lt;br /&gt;
		IPAddress broadcastGroup = IPAddress.Parse (kBroadcastGroup);&lt;/p&gt;
&lt;p&gt;m_BroadcastSocket.SetSocketOption (&lt;br /&gt;
			SocketOptionLevel.IP,&lt;br /&gt;
			SocketOptionName.AddMembership,&lt;br /&gt;
			new MulticastOption (broadcastGroup)&lt;br /&gt;
		);&lt;/p&gt;
&lt;p&gt;m_BroadcastSocket.SetSocketOption (&lt;br /&gt;
			SocketOptionLevel.IP,&lt;br /&gt;
			SocketOptionName.MulticastTimeToLive,&lt;br /&gt;
			1&lt;br /&gt;
		);&lt;/p&gt;
&lt;p&gt;m_BroadcastSocket.Connect (new IPEndPoint (broadcastGroup, kBroadcastPort));&lt;br /&gt;
	}&lt;br /&gt;
	catch (Exception e)&lt;br /&gt;
	{&lt;br /&gt;
		Debug.LogError (string.Format (&lt;br /&gt;
			&amp;quot;Exception when attempting to set up service broadcast ({0}:{1}): {2}&amp;quot;,&lt;br /&gt;
			kBroadcastGroup,&lt;br /&gt;
			kBroadcastPort,&lt;br /&gt;
			e&lt;br /&gt;
		));&lt;/p&gt;
&lt;p&gt;return false;&lt;br /&gt;
	}&lt;/p&gt;
&lt;p&gt;m_BroadcastTimer = new Timer (kBroadcastDelay);&lt;/p&gt;
&lt;p&gt;m_BroadcastTimer.Elapsed += new ElapsedEventHandler (&lt;br /&gt;
		(object s, ElapsedEventArgs e) =&amp;gt;&lt;br /&gt;
		{&lt;br /&gt;
			m_BroadcastSocket.Send (GetBroadcastBytes ());&lt;br /&gt;
		}&lt;br /&gt;
	);&lt;br /&gt;
	m_BroadcastTimer.Enabled = true;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;return true;&lt;/p&gt;
&lt;p&gt;// &amp;#8230;&lt;/p&gt;
&lt;p&gt;byte[] GetBroadcastBytes ()&lt;br /&gt;
{&lt;br /&gt;
	/*&lt;br /&gt;
		Return byte array containing IP and port of our host socket plus meta data&lt;br /&gt;
		such as current level and perhaps location (for portal placement)&lt;br /&gt;
	*/&lt;br /&gt;
}&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s go over the interface for this gist:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;kBroadcastGroup&lt;/strong&gt; and &lt;strong&gt;kBroadcastPort&lt;/strong&gt; are effectively shared keys we use to facilitate broadcasting communication between game instances. Broadcasting happens by way of multi-casting &amp;#8211; an IP protocol feature allowing peers to send one package to multiple unidentified receivers. This is why our shared keys are in the form of an IP address and a port, though their value is completely arbitrary &amp;#8211; all that matters is that both broadcaster and receiver use the same keys.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;m_BroadcastTimer&lt;/strong&gt; and &lt;strong&gt;kBroadcastDelay&lt;/strong&gt; control how often &lt;strong&gt;m_BroadcastSocket&lt;/strong&gt; will send out the broadcast message generated by &lt;strong&gt;GetBroadcastBytes&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This covers the transmission part of the broadcast functionality. The following gist deals with receiving the broadcast message:&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/5730611.js?file=Seeker.cs&#39;&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;if (m_SeekerSocket == null)
{
	m_SeekerSocket = new Socket (AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);

	try
	{
		m_SeekerSocket.Bind (new IPEndPoint (IPAddress.Any, kBroadcastPort));

		IPAddress broadcastGroup = IPAddress.Parse (kBroadcastGroup);

		m_SeekerSocket.SetSocketOption (
			SocketOptionLevel.IP,
			SocketOptionName.AddMembership,
			new MulticastOption (broadcastGroup, IPAddress.Any)
		);

		ReadBroadcasts ();
	}
	catch (Exception e)
	{
		Debug.LogError (string.Format (
			&amp;amp;quot;Exception when attempting to set up service listener ({0}:{1}): {2}&amp;amp;quot;,
			kBroadcastGroup,
			kBroadcastPort,
			e
		));

		m_SeekerSocket.Dispose ();
	}
}

// ...

void ReadBroadcasts ()
{
	/*
		Now set up periodic or event-driven reading from m_SeekerSocket, parsing
		broadcast packages containing IP, port and meta data of locally available games
	*/
}&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;
&lt;p&gt;Like with the broadcaster, &lt;strong&gt;kBroadcastGroup&lt;/strong&gt; and &lt;strong&gt;kBroadcastPort&lt;/strong&gt; are used with the same values to make sure we are listening on the same multi-cast setup as the broadcaster.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;m_SeekerSocket&lt;/strong&gt; is the socket on which broadcasts will be received &amp;#8211; just like you would on any other reception socket.&lt;/p&gt;
&lt;p&gt;And that is all there is to it. I hope you found it useful.&lt;/p&gt;</description>
				<published>2013-06-07 00:00:00 +0200</published>
				<link>http://angryant.com/2013/06/07/The-implicit-local-network-interface/</link>
			</item>
		
			<item>
				<title>Talks and progress</title>
				<description>&lt;p&gt;Recently I have been posting less hacks, tips and tricks than I wanted to and I fully intend to rectify this. However, first let me provide a brief overview of what I have in stead been squandering my time on.&lt;/p&gt;
&lt;p&gt;2013 started off with lots of still-internal Unity work which I hope will be publicly available very soon. Shortly after that I was off to a very busy &lt;span class=&quot;caps&quot;&gt;GDC&lt;/span&gt; with a very fancy booth sandwiched between Sony and Nintendo (very fitting given our announcements of partnering with both to support their new platforms).&lt;/p&gt;
&lt;p&gt;Beforehand, I had been playing around with the Oculus Rift devkits we had received in the Unity Copenhagen office and at &lt;span class=&quot;caps&quot;&gt;GDC&lt;/span&gt; a guy from Road To VR caught me for an interview about this. If you are interested in Unity and Oculus Rift, you can find the interview linked from the &lt;a href=&quot;/videos/&quot;&gt;video section&lt;/a&gt; of this site.&lt;/p&gt;
&lt;p&gt;Following &lt;span class=&quot;caps&quot;&gt;GDC&lt;/span&gt; I had a week at home to reset my time-zone orientation again, before heading to this years Unite Asia tour (re-branded from last years Unity Asia Bootcamp). So that week obviously went completely into talk prep.&lt;/p&gt;
&lt;p&gt;Unfortunately the talk recordings are not yet available, but as soon as they are, I will make sure to link them from the &lt;a href=&quot;/videos/&quot;&gt;video section&lt;/a&gt;, where you can also find recordings and example source from last years Unity Asia Bootcamp.&lt;/p&gt;
&lt;p&gt;After the two weeks blast through Asia, I had taken three weeks of vacation to reset an at this point quite messed up time-zone orientation. While I did spend some time relaxing, however I of-course had a hard time not using such a great opportunity to make some headway on Behave 2.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/share/behave2peek.png&quot; title=&quot;Sneak peek at Behave 2&quot; alt=&quot;Sneak peek at Behave 2&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Remaining tasks are mainly polish items and one fix for iOS &lt;span class=&quot;caps&quot;&gt;AOT&lt;/span&gt; compilation &amp;#8211; specifically I have moved serialization to use ProtoBuf-net for better performance and flexibility, however this library requires slightly different implementation for &lt;span class=&quot;caps&quot;&gt;AOT&lt;/span&gt; compatibility than regular &lt;span class=&quot;caps&quot;&gt;JIT&lt;/span&gt; platforms.&lt;/p&gt;
&lt;p&gt;I hope to get this wrapped up and shipped very soon, however right now I am sitting on the train to Malmö &amp;#8211; headed to the Unite Nordic conference. Tomorrow at the conference (May 22nd) I am scheduled to give two talks &amp;#8211; &amp;#8220;Unity Hacks&amp;#8221; at 10:00 and &amp;#8220;Cross-platform Considerations&amp;#8221; at 14:30.&lt;/p&gt;
&lt;p&gt;&amp;#8220;Unity Hacks&amp;#8221; is a repeat from Unite Asia, so if you don&amp;#8217;t want to wait for the videos on that one, tomorrow is your chance for some great Unity hackery. For the complete conference schedule, see the &lt;a href=&quot;http://unity3d.com/unite/nordic/&quot;&gt;Unite Nordic website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, after much consideration I decided to end my time at Unity Technologies. It has been great fun, but now seems the right time to get out and stretch my legs a bit. I do so by starting contracting again and if you&amp;#8217;re interested in working together, please use &lt;a href=&quot;/contracting&quot;&gt;the form&lt;/a&gt; I have provided for that purpose.&lt;/p&gt;
&lt;p&gt;Or if you are at Unite Nordic or Nordic Game which follows right after, feel free to give me a poke there.&lt;/p&gt;
&lt;p&gt;Until next time!&lt;/p&gt;</description>
				<published>2013-05-21 00:00:00 +0200</published>
				<link>http://angryant.com/2013/05/21/Talks-and-progress/</link>
			</item>
		
			<item>
				<title>Five years of Unity expertise looking for contracts</title>
				<description>&lt;p&gt;On the 28th of June, after four great years at Unity Technologies, I part ways with my friends to go explore for a while &amp;#8211; doing consulting / contract work.&lt;/p&gt;
&lt;p&gt;I have had a great time and seen absolutely crazy growth and things while at Unity. I definitely am leaving with a nice big bag of great memories. However I feel the need to stretch my legs a bit, so off I go.&lt;/p&gt;
&lt;p&gt;So I am available for contracts from July 1st, offering up among other things, my five years of Unity expertise. For more details on the things that I do there is this site and my &lt;a href=&quot;http://eej.dk&quot;&gt;LinkedIn profile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And, well, that&amp;#8217;s pretty much it. Want to play? Please use the handy contact form I set up: &lt;a href=&quot;/contracting&quot;&gt;Handy contact form&lt;/a&gt;.&lt;/p&gt;</description>
				<published>2013-05-14 00:00:00 +0200</published>
				<link>http://angryant.com/2013/05/14/Five-years-of-Unity-expertise-looking-for-contracts/</link>
			</item>
		
			<item>
				<title>Automagic Unity Android Java gadget OF DOOM!</title>
				<description>&lt;p&gt;Ok maybe not that dramatic, but pretty handy if you&amp;#8217;re working with Unity Android and doing some Java plugin work.&lt;/p&gt;
&lt;p&gt;I hadn&amp;#8217;t really touched Unity Android specific code since setting up automatic testing of it, so a few months back I wanted to remedy that by diving in head-first with an obvious not-hello-world sort of project.&lt;/p&gt;
&lt;p&gt;For christmas of 2011, my awesome parents had bought me a &lt;span class=&quot;caps&quot;&gt;IOIO&lt;/span&gt; board&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. I wanted to push some more boundaries of mine and do some hacking which couldn&amp;#8217;t all be contained in an email attachment and the &lt;span class=&quot;caps&quot;&gt;IOIO&lt;/span&gt; seemed a great start for that.&lt;/p&gt;
&lt;p&gt;In short, the &lt;span class=&quot;caps&quot;&gt;IOIO&lt;/span&gt; board is a small, inexpensive IO board with a &lt;span class=&quot;caps&quot;&gt;USB&lt;/span&gt; interface and Android drivers &amp;#8211; allowing you to connect your Android phone to it and control its 48 IO ports from software running on that phone.&lt;/p&gt;
&lt;p&gt;Obviously I had to write that software as a Unity project and I hope I&amp;#8217;ll get some more time to polish up the last bits of the soft- and hardware for it soonish and tell you some more about it.&lt;/p&gt;
&lt;p&gt;Anywho, that&amp;#8217;s enough background. Long story short, I obviously started out (after consulting the Unity documentation on how to work with the Java interface with Unity Android which I would need to access the &lt;span class=&quot;caps&quot;&gt;IOIO&lt;/span&gt; driver) by doing some editor scripting to reduce my iteration time on the Java I needed. Wisely I predicted that my Java would be so terribly rusty that I would need a significant number of iterations.&lt;/p&gt;
&lt;p&gt;Basically what I wanted was to get rid of the multiple steps needed for compiling, signing and assembling a Java plugin. Initially I just hacked together a perl script to reduce those steps to one line of shell execution, but that still meant more context switching than I wanted.&lt;/p&gt;
&lt;p&gt;So I leveled up the hack by having a Unity asset post processor automatically execute the perl script whenever a Java file got imported in the plugins directory &amp;#8211; re-routing any output from it to the Unity console.&lt;/p&gt;
&lt;p&gt;That was really awesome. I would make a change in my Java, save it, switch to Unity and see all my horrible compiler errors right there in the console. And as this was my only Android project, I was quite happy with my hack &amp;#8211; proceeding to kill my compiler errors and build my &lt;span class=&quot;caps&quot;&gt;IOIO&lt;/span&gt; project.&lt;/p&gt;
&lt;p&gt;Some friends had been poking me about cleaning up and generalising the hack a bit more and luck would have it that in my christmas vacation I spent a lot of time being sick. So I used some time here and there to clean up the Unity Android plugin builder and yesterday I pushed it to github &amp;#8211; without any project specific bits, without perl and somewhat more user friendly.&lt;/p&gt;
&lt;p&gt;Check it out and let me know what you think. If anything is broken or you&amp;#8217;d like to request a change or addition, please use the github issues feature:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/AngryAnt/JavaPluginBuilder&quot;&gt;The JavaPluginBuilder repository on github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;https://www.sparkfun.com/products/10748&quot;&gt;The &lt;span class=&quot;caps&quot;&gt;IOIO&lt;/span&gt; board&lt;/a&gt;&lt;/p&gt;</description>
				<published>2012-12-22 00:00:00 +0100</published>
				<link>http://angryant.com/2012/12/22/Automagic-Unity-Android-Java-gadget-OF-DOOM/</link>
			</item>
		
			<item>
				<title>Invading Planet from your couch</title>
				<description>&lt;p&gt;So yesterday was Tuesday which would normally mean I head to the local hackerspace and play around with my RC car and &lt;span class=&quot;caps&quot;&gt;IOIO&lt;/span&gt; board. However that plan was completely shot down by girlfriend homework leading to required baby juggling. Which is always fun.&lt;/p&gt;
&lt;p&gt;Obviously I did not let that deter me from getting some hacking done anyway, so I picked up another project I&amp;#8217;d had on my &lt;span class=&quot;caps&quot;&gt;TODO&lt;/span&gt; for a while.&lt;/p&gt;
&lt;p&gt;You see I quite like my home entertainment setup. So much that aside from music, reading and the occasional iOS game, I only consume entertainment from my couch.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/resources/posts/2012-10-03-Invading-Planet-from-your-couch/CouchEntertainment.jpg&quot; title=&quot;The view from my couch&quot; alt=&quot;The view from my couch&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;comment&quot;&gt;Photo shows Star Craft II running in order to appease the SC2 gang at work which is not at all impressed with the amount of hours I manage to spend training with them. I tend to play more Alpha Centauri and Galactic Civilizations II ;)&lt;/p&gt;
&lt;p&gt;That includes the occasional gaming on my mini which I mostly use for TV and videos through Plex&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, so launching a game means hiding or quitting Plex, finding the game in whatever launcher, running it and then reversing when done.&lt;/p&gt;
&lt;p&gt;Now, I&amp;#8217;m lazy and I miss a feature of Plex 8 which allowed you to launch apps from within Plex &amp;#8211; right from your apple remote. So my hacking session last evening was creating a small Plex plugin which brings that feature back &amp;#8211; as I have been unable to find a pre-existing solution from someone else.&lt;/p&gt;
&lt;p&gt;And it works just lovely. I now only need to select AppTV from my Plex main menu, select Alpha Centauri, get out my bluetooth mouse and keyboard and get gaming.&lt;/p&gt;
&lt;p&gt;And you can too! Go find the &lt;a href=&quot;https://github.com/AngryAnt/AppTV&quot;&gt;AppTV project on github&lt;/a&gt; and have some fun :)&lt;/p&gt;
&lt;p&gt;Oh and if you add something cool, pull requests would be awesome.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;http://plexapp.com&quot;&gt;Plex&lt;/a&gt;&lt;/p&gt;</description>
				<published>2012-10-03 00:00:00 +0200</published>
				<link>http://angryant.com/2012/10/03/Invading-Planet-from-your-couch/</link>
			</item>
		
			<item>
				<title>Mountain Lion and laggy bluetooth and duct-tape</title>
				<description>&lt;p&gt;If you, like me, run a bluetooth keyboard and mouse on your Mountain Lion machine, you might have noticed recent occasional slow-downs in the response time from those devices.&lt;/p&gt;
&lt;p&gt;A bit of googling told me that was not an uncommon problem and that apparently it happens mostly after resuming the OS after sleep. Also the solution appears to be restarting the BT radio.&lt;/p&gt;
&lt;p&gt;So until apple addresses this, I&amp;#8217;ve written myself a little utility apple script for turning the radio off and back on again. It&amp;#8217;s based on &lt;a href=&quot;http://www.frederikseiffert.de/blueutil/&quot;&gt;blueutil&lt;/a&gt; which is available with source if you worry about malware and simply turns off the radio for five seconds before turning it back on.&lt;/p&gt;
&lt;p&gt;I hope you find it useful.&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/3798723.js?file=&#39;&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;do shell script &amp;amp;quot;sudo /usr/local/bin/blueutil off&amp;amp;quot; with administrator privileges
delay 5
do shell script &amp;amp;quot;sudo /usr/local/bin/blueutil on&amp;amp;quot; with administrator privileges&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;</description>
				<published>2012-09-28 00:00:00 +0200</published>
				<link>http://angryant.com/2012/09/28/Mountain-Lion-and-laggy-bluetooth-and-duct-tape/</link>
			</item>
		
			<item>
				<title>Unite 12 video and new videos section available</title>
				<description>&lt;p&gt;While I was away at gameAIconf 12 in Vienna, the recording of my networking talk at this years Unite conference was made available.&lt;/p&gt;
&lt;p&gt;Rather than spreading more sporatic linking in various blog posts, I created a videos page collecting up talks, interviews and documentation videos. I&amp;#8217;m hoping it will serve as a good addition to the blog and my gists.&lt;/p&gt;
&lt;p&gt;The new section can be found over at &lt;a href=&quot;/videos&quot;&gt;/videos&lt;/a&gt;&lt;/p&gt;</description>
				<published>2012-09-23 00:00:00 +0200</published>
				<link>http://angryant.com/2012/09/23/Unite-12-video-and-new-videos-section-available/</link>
			</item>
		
			<item>
				<title>Asia Bootcamp videos now available</title>
				<description>&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;OHAI&lt;/span&gt;!&lt;/p&gt;
&lt;p&gt;Good news everyone! Having just gotten back from Unite 12, I&amp;#8217;ve just been informed that the videos from the Asia Bootcamp earlier this year are now available for public consumption!&lt;/p&gt;
&lt;p&gt;Here are the two talks I did on the tour (recordings from the Tokyo event):&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://vimeopro.com/unity3djp/unity-asia-bootcamp-tour-tokyo-for-the-public/video/41968409&quot;&gt;Streamlining your Unity editor&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vimeopro.com/unity3djp/unity-asia-bootcamp-tour-tokyo-for-the-public/video/41969880&quot;&gt;Rapid network- and AI-ready game development in Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that example projects and slides are linked just below the videos.&lt;/p&gt;
&lt;p&gt;At this yeas Unite I gave the talk &amp;#8220;Unity, Network Code, and You&amp;#8221;, which was also recorded. I&amp;#8217;ll make the recordings and example projects available for that as soon as everything is cut and online.&lt;/p&gt;</description>
				<published>2012-08-28 00:00:00 +0200</published>
				<link>http://angryant.com/2012/08/28/Asia-Bootcamp-videos-now-available/</link>
			</item>
		
			<item>
				<title>Path is now MIT licensed</title>
				<description>&lt;p&gt;Hey guys. Obviously I&amp;#8217;ve been pretty busy and since I&amp;#8217;d like to spend the spare time coding time I have on Behave, I have just made the Path repository publicly available with an &lt;span class=&quot;caps&quot;&gt;MIT&lt;/span&gt; license attached.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/AngryAnt/Path&quot; title=&quot;Path on github&quot;&gt;https://github.com/AngryAnt/Path&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that I will be monitoring and taking in pull requests as well as compiling builds for releasing into the asset store (obviously as a free package). Let&amp;#8217;s make this project as awesome as can be :)&lt;/p&gt;
&lt;p&gt;Issue tracking and wiki development (I would appreciate collaborators on that as well) is still happening on &lt;a href=&quot;https://github.com/AngryAnt/Path-release&quot; title=&quot;The Path-release repository on github&quot;&gt;https://github.com/AngryAnt/Path-release&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://forum.unity3d.com/threads/78037-AI-Pathfinding-in-Unity-Path&quot; title=&quot;Path thread on the Unity forum&quot;&gt;Unity forum thread&lt;/a&gt;.&lt;/p&gt;</description>
				<published>2012-05-17 00:00:00 +0200</published>
				<link>http://angryant.com/2012/05/17/path-is-now-mit-licensed/</link>
			</item>
		
	</channel>
</rss>
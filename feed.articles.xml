<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title>AngryAnt.com/feed - Articles</title>
		<description>Random scribblings at random intervals</description>
		<link>http://angryant.com</link>
		
			
			<item>
				<title>Mountain Lion and laggy bluetooth and duct-tape</title>
				<description>&lt;p&gt;If you, like me, run a bluetooth keyboard and mouse on your Mountain Lion machine, you might have noticed rectent occational slow-downs in the response time from those devices.&lt;/p&gt;
&lt;p&gt;A bit of googling told me that was not an uncommon problem and that apparently it happens mostly after resuming the OS after sleep. Also the solution appears to be restarting the BT radio.&lt;/p&gt;
&lt;p&gt;So until apple addresses this, I&amp;#8217;ve written myself a little utility apple script for turning the radio off and back on again. It&amp;#8217;s based on &lt;a href=&quot;http://www.frederikseiffert.de/blueutil/&quot;&gt;blueutil&lt;/a&gt; which is available with source if you worry about malware and simply turns off the radio for five seconds before turning it back on.&lt;/p&gt;
&lt;p&gt;I hope you find it useful.&lt;/p&gt;
&lt;script src='https://gist.github.com/3798723.js?file='&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;do shell script &amp;amp;quot;sudo /usr/local/bin/blueutil off&amp;amp;quot; with administrator privileges
delay 5
do shell script &amp;amp;quot;sudo /usr/local/bin/blueutil on&amp;amp;quot; with administrator privileges&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;</description>
				<published>Fri Sep 28 00:00:00 +0200 2012</published>
				<link>http://angryant.com/2012/09/28/Mountain-Lion-and-laggy-bluetooth-and-duct-tape/</link>
			</item>
			
		
			
			<item>
				<title>Unite 12 video and new videos section available</title>
				<description>&lt;p&gt;While I was away at gameAIconf 12 in Vienna, the recording of my networking talk at this years Unite conference was made available.&lt;/p&gt;
&lt;p&gt;Rather than spreading more sporatic linking in various blog posts, I created a videos page collecting up talks, interviews and documentation videos. I&amp;#8217;m hoping it will serve as a good addition to the blog and my gists.&lt;/p&gt;
&lt;p&gt;The new section can be found over at &lt;a href=&quot;/videos&quot;&gt;/videos&lt;/a&gt;&lt;/p&gt;</description>
				<published>Sun Sep 23 00:00:00 +0200 2012</published>
				<link>http://angryant.com/2012/09/23/Unite-12-video-and-new-videos-section-available/</link>
			</item>
			
		
			
			<item>
				<title>Asia Bootcamp videos now available</title>
				<description>&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;OHAI&lt;/span&gt;!&lt;/p&gt;
&lt;p&gt;Good news everyone! Having just gotten back from Unite 12, I&amp;#8217;ve just been informed that the videos from the Asia Bootcamp earlier this year are now available for public consumption!&lt;/p&gt;
&lt;p&gt;Here are the two talks I did on the tour (recordings from the Tokyo event):&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://vimeopro.com/unity3djp/unity-asia-bootcamp-tour-tokyo-for-the-public/video/41968409&quot;&gt;Streamlining your Unity editor&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vimeopro.com/unity3djp/unity-asia-bootcamp-tour-tokyo-for-the-public/video/41969880&quot;&gt;Rapid network- and AI-ready game development in Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that example projects and slides are linked just below the videos.&lt;/p&gt;
&lt;p&gt;At this yeas Unite I gave the talk &amp;#8220;Unity, Network Code, and You&amp;#8221;, which was also recorded. I&amp;#8217;ll make the recordings and example projects available for that as soon as everything is cut and online.&lt;/p&gt;</description>
				<published>Tue Aug 28 00:00:00 +0200 2012</published>
				<link>http://angryant.com/2012/08/28/Asia-Bootcamp-videos-now-available/</link>
			</item>
			
		
			
			<item>
				<title>Path is now MIT licensed</title>
				<description>&lt;p&gt;Hey guys. Obviously I&amp;#8217;ve been pretty busy and since I&amp;#8217;d like to spend the spare time coding time I have on Behave, I have just made the Path repository publicly available with an &lt;span class=&quot;caps&quot;&gt;MIT&lt;/span&gt; license attached.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/AngryAnt/Path&quot; title=&quot;Path on github&quot;&gt;https://github.com/AngryAnt/Path&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that I will be monitoring and taking in pull requests as well as compiling builds for releasing into the asset store (obviously as a free package). Let&amp;#8217;s make this project as awesome as can be :)&lt;/p&gt;
&lt;p&gt;Issue tracking and wiki development (I would appreciate collaborators on that as well) is still happening on &lt;a href=&quot;https://github.com/AngryAnt/Path-release&quot; title=&quot;The Path-release repository on github&quot;&gt;https://github.com/AngryAnt/Path-release&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://forum.unity3d.com/threads/78037-AI-Pathfinding-in-Unity-Path&quot; title=&quot;Path thread on the Unity forum&quot;&gt;Unity forum thread&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Thu May 17 00:00:00 +0200 2012</published>
				<link>http://angryant.com/2012/05/17/path-is-now-mit-licensed/</link>
			</item>
			
		
			
			<item>
				<title>Behave 1.4 released</title>
				<description>&lt;p&gt;So obviously I ended up not spending more time on that &lt;span class=&quot;caps&quot;&gt;RPG&lt;/span&gt; thing&amp;#8230; I did however work on some 3.5 stuff back at Unity, some upcoming demo stuff and baby Lili was born.&lt;/p&gt;
&lt;p&gt;Meanwhile I spent spare time on Behave rather than the &lt;span class=&quot;caps&quot;&gt;RPG&lt;/span&gt; thing, so now 1.4 is ready for release. &lt;span class=&quot;caps&quot;&gt;TADAA&lt;/span&gt;!&lt;/p&gt;
&lt;p&gt;This release primarily holds runtime optimizations, fixes and tweaks. Specifically I would like to highlight the ability to mark components as &amp;#8220;instant&amp;#8221;. The instant flag affects sequences and selectors when moving between child nodes. When an instant child component completes, rather than waiting for the next tick to tick the following child node, the sequence or selector does it immediately.&lt;/p&gt;
&lt;p&gt;Anywho, get it on the asset store and remember to rebuild your libraries after installing.&lt;/p&gt;
&lt;p&gt;The rest of the changes follow:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Fixed decorator incorrectly initializing on every returning tick when tick handler returned Running.&lt;/li&gt;
	&lt;li&gt;Fixed debugger view dependency on active tree editor &amp;#8211; causing reported null reference exception.&lt;/li&gt;
	&lt;li&gt;Fixed missing scrollbars on browser window.&lt;/li&gt;
	&lt;li&gt;Reduced logging noise from debug builds.&lt;/li&gt;
	&lt;li&gt;Agent blueprints can now be MonoBehaviour based.&lt;/li&gt;
	&lt;li&gt;Clarified wording on &amp;#8220;library not loaded&amp;#8221;.&lt;/li&gt;
	&lt;li&gt;Now handling reset a bit cleverer &amp;#8211; potential performance boost.&lt;/li&gt;
	&lt;li&gt;Changed the default success criteria of Parallel components from SuccessOrFailure to Success.&lt;/li&gt;
	&lt;li&gt;Added &amp;#8220;instant&amp;#8221; flag to components. Components marked instant will affect sequences and selectors when moving between child nodes. When a child node marked &amp;#8220;instant&amp;#8221; completes, rather than waiting for the next tree tick to tick the following child node, the sequence or selector does it immediately.&lt;/li&gt;
	&lt;li&gt;The compiler progress bar returns.&lt;/li&gt;
	&lt;li&gt;Editing a Behave asset now focuses the asset browser last instead of the tree editor.&lt;/li&gt;
	&lt;li&gt;Behave can now be installed in any subfolder of Assets &amp;#8211; provided its internal folder structure remains intact.&lt;/li&gt;
	&lt;li&gt;Compilation speed improvements.&lt;/li&gt;
	&lt;li&gt;Enabled references across collection borders.&lt;/li&gt;
	&lt;li&gt;Added Tree.DataSize &amp;#8211; returning the number of bytes used by a tree instance. This is also displayed in the debugger window.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You&amp;#8217;ll find a link to the package in the &lt;a href=&quot;/behave/download&quot; title=&quot;The Behave download section&quot;&gt;download&lt;/a&gt; section. Have fun!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://forum.unity3d.com/threads/61849-AI-Behaviour-trees-in-Unity-Behave-1.1-released&quot; title=&quot;Behave thread on the Unity forum&quot;&gt;Unity forum thread&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Wed Nov 30 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/11/30/behave-1-4-released/</link>
			</item>
			
		
			
			<item>
				<title>So I've been a bit busy lately</title>
				<description>&lt;p&gt;Little under half a year later and I&amp;#8217;m still here. Things have been rather hectic since my last update. In Copenhagen we conquered more office space and my team moved in there. I made some demos (&lt;a href=&quot;http://u3d.as/content/unity-technologies/third-person-mmo-controller/1Wt&quot;&gt;Third Person &lt;span class=&quot;caps&quot;&gt;MMO&lt;/span&gt; Controller&lt;/a&gt; and &lt;a href=&quot;http://u3d.as/content/unity-technologies/astro-dude/24Y&quot;&gt;Astro Dude&lt;/a&gt;), went to &lt;a href=&quot;http://gameaiconf.com/&quot;&gt;a conference&lt;/a&gt;, worked on &lt;a href=&quot;http://blogs.unity3d.com/2011/06/16/unity-roadmap-2011/&quot;&gt;a Unity release&lt;/a&gt; and pitched in to realize &lt;a href=&quot;http://unity3d.com/unite/&quot;&gt;another killer conference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By the way at that last conference I did a talk titled &amp;#8220;AI in Unity&amp;#8221; &amp;#8211; the goal of which was to try and demystify the concept of AI a bit. I&amp;#8217;ll make some noise when we have the recording of it available.&lt;/p&gt;
&lt;p&gt;Oh and I fixed the comments on the blog, so I&amp;#8217;ve just cleared out 300-something spam posts. Anyone got advice on how to avoid this on a WordPress blog? (Read: I&amp;#8217;m too lazy to change blogging system if anyone suggests that). Oh and therefore I enabled the &amp;#8220;must approve comments&amp;#8221; thingy. Not sure if that is going to help anything, but at least it will reduce the noise on your end.&lt;/p&gt;
&lt;p&gt;So what is next then? Well I&amp;#8217;ve got a few things I&amp;#8217;d like to release in a Behave point upgrade and then the plan is to move on to 2.0 which will hold some backwards-compatibility breaking changes.&lt;/p&gt;
&lt;p&gt;At Unity there&amp;#8217;s a bit more 3.5 stuff to do and some even awesomererer demos on the way. The extra awesomeness has been underway for quite a while, so I&amp;#8217;m very excited to get this out soon.&lt;/p&gt;
&lt;p&gt;I very recently started playing around with some &lt;span class=&quot;caps&quot;&gt;RPG&lt;/span&gt; mechanics in my spare time (had a day off after Unite and couldn&amp;#8217;t sit still). It&amp;#8217;s so spare time that the plan is to have no additional plans. Let&amp;#8217;s see where that goes.&lt;/p&gt;
&lt;p&gt;Ah and I&amp;#8217;ll work with &lt;a href=&quot;http://www.blender.org/blenderorg/blender-foundation/&quot;&gt;some groovy dudes&lt;/a&gt; on getting a &lt;a href=&quot;http://copenhagen.startupweekend.org/&quot;&gt;3D themed workshop event&lt;/a&gt; up and going early next year. I don&amp;#8217;t think it has been announced yet, but it will be awesome &amp;#8211; and full of Unity of-course. That should hit right before &lt;a href=&quot;http://nordicgamejam.org/&quot;&gt;the other groovy thing&lt;/a&gt; I&amp;#8217;m working on again this year with more &lt;a href=&quot;http://igda.dk/&quot;&gt;awesome dudes and dudettes&lt;/a&gt;. Fun times!&lt;/p&gt;
&lt;p&gt;What else? Oh yea. With my low bandwidth for updates, I&amp;#8217;ve increasingly turned to &lt;a href=&quot;http://twitter.com/#!/angryant&quot;&gt;twitter&lt;/a&gt; and the &lt;a href=&quot;https://gist.github.com/AngryAnt&quot;&gt;gist&lt;/a&gt; feature of &lt;a href=&quot;https://github.com/AngryAnt&quot;&gt;github&lt;/a&gt;. Hopefully I will have the time to do some good reads in the Tips and Tricks section soon, but the gist setup is just so very quick.&lt;/p&gt;
&lt;p&gt;I probably forgot a ton of stuff, but hopefully this was a good reboot of this blog thing. Let&amp;#8217;s see what happens. Maybe I could start blogging about that &lt;span class=&quot;caps&quot;&gt;RPG&lt;/span&gt; thing if it accidentally turns interesting. We&amp;#8217;ll see.&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;</description>
				<published>Sun Oct 09 00:00:00 +0200 2011</published>
				<link>http://angryant.com/2011/10/09/so-ive-been-a-bit-busy-lately/</link>
			</item>
			
		
			
			<item>
				<title>Behave 1.3 released</title>
				<description>&lt;p&gt;After quite a long break (including shifting around at utech, doing a Path release etc.), Behave is finally getting another update!&lt;/p&gt;
&lt;p&gt;This release is primarily a bugfix and editor polish release. One thing I&amp;#8217;d like to highlight though is the addition of agent blueprints. From the changelog:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;- Added agent blueprints &amp;#8211; connecting to agent handlers through virtual methods rather than reflected handlers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Generally this enables you to more explicitly tie up handlers and cuts down on tree initialization time. Oh and of-course you gain auto-completion when setting up your handlers.&lt;/p&gt;
&lt;p&gt;Anyway, here&amp;#8217;s the whole changelog:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Fixed priority selector init flag resetting.&lt;/li&gt;
	&lt;li&gt;Fixed reference handling on tree renaming and deletion.&lt;/li&gt;
	&lt;li&gt;Fixed references still pointing at old collection post collection duplication.&lt;/li&gt;
	&lt;li&gt;Fixed compilation of actions and decorators with non-integral float parameters.&lt;/li&gt;
	&lt;li&gt;Fixed &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; list behaviours.&lt;/li&gt;
	&lt;li&gt;Fixed passing context back and forth between referenced trees and referrer.&lt;/li&gt;
	&lt;li&gt;Fixed reordering connections not causing save state to be set.&lt;/li&gt;
	&lt;li&gt;Various &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; tweaks.&lt;/li&gt;
	&lt;li&gt;Runtime optimisations.&lt;/li&gt;
	&lt;li&gt;Enabled scrolling of the tree list in the debugger window.&lt;/li&gt;
	&lt;li&gt;Exposed Tree.ReflectForwards.&lt;/li&gt;
	&lt;li&gt;Added Tree.ResetForwards.&lt;/li&gt;
	&lt;li&gt;Added agent blueprints &amp;#8211; connecting to agent handlers through virtual methods rather than reflected handlers.&lt;/li&gt;
	&lt;li&gt;Made connections selectable in the tree editor via the connection nub.&lt;/li&gt;
	&lt;li&gt;Moved connection managing from the inspector to the tree editor, where it is more visible and handy.&lt;/li&gt;
	&lt;li&gt;Added support for disabling connections &amp;#8211; for faster, less destructive debugging.&lt;/li&gt;
	&lt;li&gt;Double-click reference component to jump to referenced tree.&lt;/li&gt;
	&lt;li&gt;Changed &amp;#8220;Cannot update unregistered tree&amp;#8221; handling from an exception to an error message. Still need more info.&lt;/li&gt;
	&lt;li&gt;Now showing string and float parameters in the tree editor if either is set.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You&amp;#8217;ll find a link to the package in the &lt;a href=&quot;/behave/download&quot; title=&quot;The Behave download section&quot;&gt;download&lt;/a&gt; section. Have fun!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://forum.unity3d.com/threads/61849-AI-Behaviour-trees-in-Unity-Behave-1.1-released&quot; title=&quot;Behave thread on the Unity forum&quot;&gt;Unity forum thread&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Thu Apr 28 00:00:00 +0200 2011</published>
				<link>http://angryant.com/2011/04/28/behave-1-3-released/</link>
			</item>
			
		
			
			<item>
				<title>IGDA Unity SIG slides</title>
				<description>&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;OHAI&lt;/span&gt;! Sorry about the delay &amp;#8211; things have been a bit hectic around here. Per request, I&amp;#8217;m making available exports of three of my slideshows from the recent &lt;span class=&quot;caps&quot;&gt;IGDA&lt;/span&gt; Unity SIGs. I hope you&amp;#8217;ll find them useful:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/uploads/2011/04/AI%20in%20Unity.pdf&quot;&gt;AI in Unity&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/uploads/2011/04/Network.pdf&quot;&gt;Network&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/uploads/2011/04/Unity%20GUI.pdf&quot;&gt;Unity &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Sat Apr 23 00:00:00 +0200 2011</published>
				<link>http://angryant.com/2011/04/23/igda-unity-sig-slides/</link>
			</item>
			
		
			
			<item>
				<title>Second Unity IGDA SIG this evening: Scene construction and AI</title>
				<description>&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;OHAI&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;A week has passed and the second of six Unity specific &lt;span class=&quot;caps&quot;&gt;IGDA&lt;/span&gt; SIGs is upon us. Like last time, the event will take place at the IT University, Copenhagen, Denmark at 1800.&lt;/p&gt;
&lt;p&gt;We will meet in the reception and from there move to the auditorium. The originally planned physics bit of todays &lt;span class=&quot;caps&quot;&gt;SIG&lt;/span&gt; has been rescheduled to next thursday, where Jonas Echterhoff will be in town and give the talk. Jonas is the man with the plan of the PhysX integration in Unity, so added awesomenessness!&lt;/p&gt;
&lt;p&gt;This means that today Joe Robins will be talking about scene construction and I will be covering AI in Unity.&lt;/p&gt;
&lt;p&gt;For this thursday we should be lucky and get even more Unity Tech people to participate in the discussion bit of the &lt;span class=&quot;caps&quot;&gt;SIG&lt;/span&gt;. And remember afterwards we&amp;#8217;re doing the bar meet and given it&amp;#8217;s Saint Patricks, we&amp;#8217;re likely to be a good group of people moving from bar to bar.&lt;/p&gt;
&lt;p&gt;The original &lt;span class=&quot;caps&quot;&gt;IGDA&lt;/span&gt; post w. schedule:&lt;br /&gt;
&lt;a href=&quot;http://igda.dk/2011/02/01/unity-sig-unity-special-interest-group-launch/&quot;&gt;http://igda.dk/2011/02/01/unity-sig-unity-special-interest-group-launch/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;IGDA&lt;/span&gt; post on the rescheduling of the physics talk:&lt;br /&gt;
&lt;a href=&quot;http://igda.dk/2011/03/16/unity-sig-update-on-the-meeting-thursday-173/&quot;&gt;http://igda.dk/2011/03/16/unity-sig-update-on-the-meeting-thursday-173/&lt;/a&gt;&lt;/p&gt;</description>
				<published>Thu Mar 17 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/03/17/second-unity-igda-sig-this-evening-scene-construction-and-ai/</link>
			</item>
			
		
			
			<item>
				<title>First IGDA Unity SIG this evening</title>
				<description>&lt;p&gt;Quick announcement for anyone in or around the &lt;span class=&quot;caps&quot;&gt;CPH&lt;/span&gt; area: I&amp;#8217;m doing the first of six &lt;span class=&quot;caps&quot;&gt;IGDA&lt;/span&gt; Unity SIGs (Special Interest Groups) this evening, with Joe Robins.&lt;/p&gt;
&lt;p&gt;The event is held at the IT University of Copenhagen and starts at 1800. Anyone can attend (for free) and this first &lt;span class=&quot;caps&quot;&gt;SIG&lt;/span&gt; will be a general introduction to Unity &amp;#8211; basic principles of the engine, workflow and such. The following five SIGs will dive into various specific areas of Unity.&lt;/p&gt;
&lt;p&gt;For more information and the full program, see the &lt;span class=&quot;caps&quot;&gt;IGDA&lt;/span&gt; DK blog:&lt;br /&gt;
&lt;a href=&quot;http://igda.dk/2011/02/01/unity-sig-unity-special-interest-group-launch/&quot;&gt;http://igda.dk/2011/02/01/unity-sig-unity-special-interest-group-launch/&lt;/a&gt;&lt;/p&gt;</description>
				<published>Thu Mar 10 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/03/10/first-igda-unity-sig-this-evening/</link>
			</item>
			
		
			
			<item>
				<title>Alternative licensing available</title>
				<description>&lt;p&gt;After having been poked on the issue for a while now, I&amp;#8217;m finally offering the option of requesting alternative licensing on Path and Behave.&lt;/p&gt;
&lt;p&gt;Something in the default license which doesn&amp;#8217;t fit your project too well? Let&amp;#8217;s talk about it. Please use the form available on the &lt;a href=&quot;/behave/download/&quot;&gt;download&lt;/a&gt; page.&lt;/p&gt;</description>
				<published>Thu Mar 03 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/03/03/alternative-licensing-available/</link>
			</item>
			
		
			
			<item>
				<title>Pathfinding in two lines</title>
				<description>&lt;p&gt;I just updated the &lt;a href=&quot;/path/documentation&quot;&gt;Path documentation&lt;/a&gt; with a short tutorial describing the simplest possible interface between your code and the Path runtime: &amp;#8220;Pathfinding in two lines&amp;#8221;.&lt;/p&gt;
&lt;p&gt;Furthermore, I added a link to the previously released introduction video to Path 2.0b1. While I will make sure to re-record it with the released build, 99% of the stuff in that video still applies.&lt;/p&gt;</description>
				<published>Tue Feb 15 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/02/15/pathfinding-in-two-line/</link>
			</item>
			
		
			
			<item>
				<title>Path 2 released</title>
				<description>&lt;p&gt;That&amp;#8217;s right, Path is back in business &amp;#8211; easier to use and more powerful than ever before! Version 2 is now available for download on the Unity asset store. Find a link to it in the &lt;a href=&quot;/path/download&quot;&gt;download&lt;/a&gt; section &amp;#8211; along with an example seeker script.&lt;/p&gt;
&lt;p&gt;Full &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; documentation is available in the &lt;a href=&quot;/path/documentation&quot;&gt;documentation&lt;/a&gt; section &amp;#8211; more documentation is on the way, as is integration between UnitySteer and Path 2.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s it for now. Have fun!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://forum.unity3d.com/threads/78037-AI-Pathfinding-in-Unity-Path&quot; title=&quot;Path thread on the Unity forum&quot;&gt;Unity forum thread&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Tue Feb 15 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/02/15/path-2-released/</link>
			</item>
			
		
			
			<item>
				<title>Assembling and assimilating</title>
				<description>&lt;p&gt;So this post has been delayed for quite a while&amp;#8230; One question I got from many sources after my Advanced Editor Scripting talk with Adam Mechtley at Unite &amp;#8217;10 was &amp;#8220;so how did you do that assembly building thing?&amp;#8221;.&lt;/p&gt;
&lt;p&gt;Well I did it before we had a port of MonoDevelop available, so my options were limited. Now that we do have that port, you&amp;#8217;ll be able to redo this exercise in there with some &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; drag-drop nicenessness. However, just because I can (and because it is healthy learning and lovely hacky) I will provide the command-line/perl script solution, which is still my approach.&lt;/p&gt;
&lt;p&gt;First a quick &amp;#8220;why&amp;#8221;: As mentioned in my Unite talk, there are three reasons I wrap my projects in .net assemblies before distributing &amp;#8211; and no it&amp;#8217;s got nothing to do with keeping the source secure &amp;#8211; assemblies are &lt;b&gt;easily&lt;/b&gt; decompiled:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Reduce deployment clutter. If I were to release Behave without being wrapped in assembly, it would span around 150 &amp;#8211; 170 source files and textures in various folder configurations. Now I have two folders, three assemblies and about five script files.&lt;/li&gt;
	&lt;li&gt;Reduce funky bug reports. While .net assemblies are very easily disassembled, it does at least take some dedication to do so. More than it takes to randomly change something in a full source distribution when things don&amp;#8217;t go your way. So assemblies help you get rid of a portion of those really long bug reports which end up with &amp;quot;oh, by the way, I changed this one thing in your distribution &amp;#8211; you think that might have something to do with it?.&lt;/li&gt;
	&lt;li&gt;They can load in at runtime. This is really cool and quite useful if applicable to your scenario &amp;#8211; for more information, check out this other tips and tricks post: &lt;a href=&quot;http://angryant.com/general/tipsandtricks/downloading-the-hydra/&quot; target=&quot;_parent&quot;&gt;downloading the hydra&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post I am going to show you how to build your scripts into a .net assembly (.dll) and add it to your Unity project. And just to spice things up, lets take that in reverse: Once your assembly is built, copy that bastard into your Assets folder. Done.&lt;/p&gt;
&lt;p&gt;Easy, right? Now, let&amp;#8217;s take a look at the assembly building. And, before you start, yes this will run on all Unity supported platforms and no it does not require pro &amp;#8211; run this on the base Unity license without issues.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;So first off, if you are on windows, you&amp;#8217;ll be needing a perl install. I usually got for ActivePerl. Not saying it is more awesomerer than anything else out there &amp;#8211; just that I know it and it usually works just fine. If you are on OS X, you&amp;#8217;re in luck, as perl comes preinstalled.&lt;/p&gt;
&lt;p&gt;Now, let&amp;#8217;s get perl hacking. This is in no way meant as a &amp;#8220;my first perl script&amp;#8221; guide. We&amp;#8217;re just getting introduced to a means to an end &amp;#8211; and it is not going to be pretty. So first off, create a new text file in your favorite text editor and save it as build.pl. Start the file off like so:&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=build-1.pl'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;#/usr/local/bin/perl

use strict;
use Getopt::Long;
use Term::ANSIColor;
use File::Basename;
use File::Spec;
chdir (File::Spec-&amp;amp;gt;rel2abs (dirname($0)));

our $compiler = &amp;amp;quot;/Applications/Unity/Unity.app/Contents/Frameworks/Mono/bin/gmcs&amp;amp;quot;;
our $assemblyUnityEngine = &amp;amp;quot;/Applications/Unity/Unity.app/Contents/Frameworks/Managed/UnityEngine.dll&amp;amp;quot;;
our $assemblyUnityEditor = &amp;amp;quot;/Applications/Unity/Unity.app/Contents/Frameworks/Managed/UnityEditor.dll&amp;amp;quot;;&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Now, that was a bit of a mouthful, but it should be pretty straight-forward. Lines three through eight include a lot of perl functionality we will be using later. And actually the last two ones are already used in line nine. Here we&amp;#8217;re ensuring that the rest of the script is being executed in the context of the folder containing the file.&lt;/p&gt;
&lt;p&gt;In the next few lines of interest, three variables are declared &amp;#8211; pathes to the mono compiler shipped with Unity and the UnityEngine and UnityEditor assemblies. Notice that these are OS X pathes, for a windows setup (or if you installed Unity into a different folder than the default), you&amp;#8217;ll need to correct these.&lt;/p&gt;
&lt;h2&gt;Debug command-line parameter&lt;/h2&gt;
&lt;p&gt;Next up, let&amp;#8217;s add support for command-line parameters. &amp;#8220;Why?&amp;#8221; you ask &amp;#8211; because they are going to be awesome for debugging our assembly later. The only command-line parameter we will be supporting for now is &amp;#8220;&amp;#8212;release&amp;#8221;. This will basically let us toggle, when building the assembly, a bunch of logging and other stuff on or off. This is what it looks like:&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=build-2.pl'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;my $optionRelease = 0;

GetOptions (
	&amp;amp;quot;release&amp;amp;quot; =&amp;amp;gt; \$optionRelease
);&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;We declare a variable named optionRelease, initialize it to zero and then call GetOptions, telling it to pass data on the use of the &amp;#8220;release&amp;#8221; parameter into our variable. Now, GetOptions has a bunch of functionality, but the way we use it here, it simply assigns one or zero to our variable &amp;#8211; depending on whether the parameter is used or not.&lt;/p&gt;
&lt;p&gt;Next up, we need to use this variable to affect the parameters we pass to the gmcs compiler. Like so:&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=build-3.pl'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;my $debugOptions = $optionRelease == 0 ? &amp;amp;quot;-d:DEBUG&amp;amp;quot; : &amp;amp;quot;&amp;amp;quot;;&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;The idea here is that gmcs takes a parameter -d:[name] which instructs it to, during pre-processing, run with the symbol [name] defined. Something we can work with in our code like this:&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=AssemblyTest-1.cs'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;#if DEBUG
	Debug.Log (&amp;amp;quot;I'm only visible in debug builds!&amp;amp;quot;);
#endif&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;Building two assemblies&lt;/h2&gt;
&lt;p&gt;Next up, a bit of info. Since Unity 3, we&amp;#8217;ve enforced that scripts and assembly depending on UnityEditor, even if not using that, cannot be included in builds. This means that if you have some editor scripts, you would also like built to assembly, you will need to split these out into a different assembly than the one containing your runtime scripts.&lt;/p&gt;
&lt;p&gt;Lets&amp;#8217;s assume that is the case for this exercise, that the runtime scripts are located in Source/ and that the editor scripts are located in Source/Editor. So we will have to build two assemblies. That could mean code duplication, which should cause anyone pain, so let&amp;#8217;s be nice and wrap some of the building up in a perl subroutine:&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=build-4.pl'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;sub BuildAssembly
{
	our $compiler;

	my $target = shift;
	my $out = shift;
	my $arguments = shift;
	my $source = shift;

	print (&amp;amp;quot;Compiling $out\n&amp;amp;quot;);
	print color (&amp;amp;quot;blue&amp;amp;quot;), &amp;amp;quot;$compiler -target:$target -out:$out $arguments $source\n&amp;amp;quot;;
	print color (&amp;amp;quot;red&amp;amp;quot;);
	system (&amp;amp;quot;$compiler -target:$target -out:$out $arguments $source&amp;amp;quot;) and die (&amp;amp;quot;Compilation of $out failed.&amp;amp;quot;);
	print color (&amp;amp;quot;reset&amp;amp;quot;);
}&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s take this subroutine line by line. First off we pull in the global variable &amp;#8220;compiler&amp;#8221;. After this, we populate the variables target, out, arguments and source from subroutine parameters. With these at hand, the fun begins. First off, we print out the name of our build target (MyAwesome.dll) and the command we&amp;#8217;re planning to execute &amp;#8211; marked in fashionable blue.&lt;/p&gt;
&lt;p&gt;Second we actually do the building &amp;#8211; colouring any compiler output red (no news is good news &amp;#8211; output is bad). If compilation fails, we kill the script &amp;#8211; allowing the user to take action. If all went well, we remember to reset the colouring before returning from the subroutine.&lt;/p&gt;
&lt;p&gt;So how about some use of this subroutine, eh?&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=build-5.pl'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;BuildAssembly (&amp;amp;quot;library&amp;amp;quot;, &amp;amp;quot;Awesomenessness.Runtime.dll&amp;amp;quot;, &amp;amp;quot;Source/*.cs&amp;amp;quot;, &amp;amp;quot;-d:RUNTIME $debugOptions -r:$assemblyUnityEngine&amp;amp;quot;);
BuildAssembly (&amp;amp;quot;library&amp;amp;quot;, &amp;amp;quot;Awesomenessness.Editor.dll&amp;amp;quot;, &amp;amp;quot;Source/Editor/*.cs&amp;amp;quot;, &amp;amp;quot;-d:EDITOR $debugOptions -r:Awesomenessness.Runtime.dll,$assemblyUnityEngine,$assemblyUnityEditor&amp;amp;quot;);&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;As you see, we first build the runtime assembly from Source/*.cs, with the &lt;span class=&quot;caps&quot;&gt;RUNTIME&lt;/span&gt; and optionally the &lt;span class=&quot;caps&quot;&gt;DEBUG&lt;/span&gt; symbol defined. We also make sure to include the UnityEngine assembly in the building, so that you can reference stuff from the UnityEngine namespace.&lt;/p&gt;
&lt;p&gt;In the second line, we build the editor assembly &amp;#8211; containing all our editor code from Source/Editor/*.cs. This time we define the &lt;span class=&quot;caps&quot;&gt;EDITOR&lt;/span&gt; and optionally the &lt;span class=&quot;caps&quot;&gt;DEBUG&lt;/span&gt; symbol during building. This assembly references not only the UnityEngine assembly, but also the UnityEditor one and the runtime assembly which was just built in the line above.&lt;/p&gt;
&lt;h2&gt;Distribution&lt;/h2&gt;
&lt;p&gt;And that&amp;#8217;s about it! As mentioned early in this post, all you need to do in order to include these assemblies in your project is to drag them into your assets folder, but if you&amp;#8217;re very nice, you could just make that copy a part of the build script:&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=build-6.pl'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;system (&amp;amp;quot;cp Awesomenessness.Runtime.dll Test\\ project/Assets/Awesomenessness&amp;amp;quot;);
system (&amp;amp;quot;cp Awesomenessness.Editor.dll Test\\ project/Assets/Awesomenessness/Editor&amp;amp;quot;);&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Notice that this uses the OS X cp command-line tool. For windows, replace with equivalent.&lt;/p&gt;
&lt;h2&gt;Limitation: Editor classes in assemblies&lt;/h2&gt;
&lt;p&gt;While MonoBehaviours can live just fine in assemblies, editor scripts (ScriptableObject derived classes) come with a limitation (currently still active, as of Unity 3.1): You can not initialize these classes via UnityEditor &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; calls. That would be calls like ScriptableObject.CreateInstance and EditorWindow.GetWindow.&lt;/p&gt;
&lt;p&gt;However &amp;#8211; you can create instances of classes via &amp;#8220;new&amp;#8221; just fine and you can derive scripts located outside of the assembly and instantiate those via UnityEditor calls without incident. Say for example that MyEditorWindow derives from EditorWindow and is located in an assembly. Now I cannot instantiate it via GetWindow, but if I create a .cs file in my assets folder containing a class which does nothing but inherit from MyEditorWindow, then that class can be instantiated via GetWindow just fine and will have the exact same behaviour.&lt;/p&gt;
&lt;h2&gt;Extra trick: Including resources in the assembly&lt;/h2&gt;
&lt;p&gt;For extra points, you can include resources, such as textures, in your assembly. This has the bonus of limiting the clutter of your distribution even more.&lt;/p&gt;
&lt;p&gt;Including the resource in your build is as simple as appending the &amp;#8220;-resource:[path]&amp;#8221; parameter to your gmcs build command. This will add the bytes into the assembly manifest &amp;#8211; under the name of the original file. You can fetch these bytes at runtime, using that name. For example, here&amp;#8217;s some utility methods for fetching textures:&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=AssemblyTest-2.cs'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;public static Stream GetResourceStream (string resourceName, Assembly assembly)
{
	if (assembly == null)
	{
		assembly = Assembly.GetExecutingAssembly ();
	}

	return assembly.GetManifestResourceStream (resourceName);
}


public static Stream GetResourceStream (string resourceName)
{
	return GetResourceStream (resourceName, null);
}


public static byte[] GetByteResource (string resourceName, Assembly assembly)
{
	Stream byteStream = GetResourceStream (resourceName, assembly);
	byte[] buffer = new byte[byteStream.Length];
	byteStream.Read (buffer, 0, (int)byteStream.Length);
	byteStream.Close ();

	return buffer;
}


public static byte[] GetByteResource (string resourceName)
{
	return GetByteResource (resourceName, null);
}


public static Texture2D GetTextureResource (string resourceName, Assembly assembly)
{
	Texture2D texture = new Texture2D (4, 4);
	texture.LoadImage (GetByteResource (resourceName, assembly));

	return texture;
}


public static Texture2D GetTextureResource (string resourceName)
{
	return GetTextureResource (resourceName, null);
}&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Given that you added &amp;#8220;-resource:path/to/Logo.png&amp;#8221; to your gmcs build command, you will with the above utility methods be able to fetch that into a texture like so:&lt;/p&gt;
&lt;script src='https://gist.github.com/3165387.js?file=AssemblyTest-3.cs'&gt;&lt;/script&gt;&lt;div&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;Texture2D logoTexture = GetTextureResource (&amp;amp;quot;Logo.png&amp;amp;quot;);&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;p&gt;&lt;/div&gt;&lt;div class='gistspacer'&gt;&amp;nbsp;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Well, I hope you guys found some of this useful! I&amp;#8217;ll see if I can&amp;#8217;t do a follow-up on how to do this in MonoDevelop.&lt;/p&gt;</description>
				<published>Wed Feb 02 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/02/02/assembling-and-assimilating/</link>
			</item>
			
		
			
			<item>
				<title>Path 2 intro screencast</title>
				<description>&lt;p&gt;As promised &amp;#8211; a quick screencast of how to set up and use the Path 2 beta:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;/resources/path/Path2.mov&quot;&gt;Path 2.0b1 quick intro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Sat Jan 29 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/01/29/path-2-intro-screencast/</link>
			</item>
			
		
			
			<item>
				<title>Path 2 beta release for GGJ</title>
				<description>&lt;p&gt;With the Global Game Jam underway, I figured I would do an early beta release of Path 2. While I&amp;#8217;m home with the flu &amp;#8211; not able to participate in the Nordic Game Jam myself, I might as well do a bit of documentation on this thing and see if anyone finds it useful.&lt;/p&gt;
&lt;p&gt;So documentation is on the way, but the Path2 package is available from the &lt;a href=&quot;/path/download&quot;&gt;download&lt;/a&gt; section right now &amp;#8211; as is the demo seeker script.&lt;/p&gt;
&lt;p&gt;Path 2.0b1 feature set:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Throttle-able, co-routine driven seeker jobs for maximum performance.&lt;/li&gt;
	&lt;li&gt;Super simple Navigator.targetPosition interface.&lt;/li&gt;
	&lt;li&gt;Additional. Navigator.RequestPath interface.&lt;/li&gt;
	&lt;li&gt;Very straight forward and powerful editor interface.&lt;/li&gt;
	&lt;li&gt;Waypoint auto-connect and auto-scale empowering network authoring.&lt;/li&gt;
	&lt;li&gt;Custom weights based on the Unity built-in tags system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No release schedule yet. Documentation as I can have it ready. Have fun!&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m off to recording a screen cast of this.&lt;/p&gt;</description>
				<published>Sat Jan 29 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/01/29/path-2-beta-release-for-ggj/</link>
			</item>
			
		
			
			<item>
				<title>AIgameDev master class video now online</title>
				<description>&lt;p&gt;For those of you who didn&amp;#8217;t have a chance to dial in live, but would still like to view the master class I did for AIgameDev last year: The video recording is now available here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://aigamedev.com/premium/masterclass/unity-behave/&quot;&gt;http://aigamedev.com/premium/masterclass/unity-behave/&lt;/a&gt;&lt;/p&gt;</description>
				<published>Tue Jan 25 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/01/25/aigamedev-master-class-video-now-online-3/</link>
			</item>
			
		
			
			<item>
				<title>Expanding beta</title>
				<description>&lt;p&gt;Due to an increasing number of users, I&amp;#8217;ve decided to expand the Behave beta testing group.&lt;/p&gt;
&lt;p&gt;You will find more information on this and how to join in the &amp;#8220;Beta&amp;#8221; page of the &amp;#8220;Behave&amp;#8221; section on this site &amp;#8211; &lt;a href=&quot;http://angryant.com/behave/beta/&quot;&gt;http://angryant.com/behave/beta&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Sun Jan 09 00:00:00 +0100 2011</published>
				<link>http://angryant.com/2011/01/09/expanding-beta/</link>
			</item>
			
		
			
			<item>
				<title>Behave AIgameDev master class public stream</title>
				<description>&lt;p&gt;Hey guys &amp;#8211; as promised, the live stream is now just about ready to go. The clock reads about ten minutes to impact, so join up!&lt;/p&gt;
&lt;p&gt;The direct link is available in the following forum post:&lt;br /&gt;
&lt;a href=&quot;http://forum.unity3d.com/threads/68843-Behave-master-class-on-AIgameDev/&quot;&gt;http://forum.unity3d.com/threads/68843-Behave-master-class-on-AIgameDev&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Sun Nov 28 00:00:00 +0100 2010</published>
				<link>http://angryant.com/2010/11/28/behave-aigamedev-master-class-public-stream/</link>
			</item>
			
		
			
			<item>
				<title>Behave master class on open AIgameDev stream tomorrow</title>
				<description>&lt;p&gt;Hey guys. Just a quick reminder here. Tomorrow I am doing the AIgameDev masterclass on Behave (times below). Alex of AIgameDev has been so kind as to make the stream publicly available. That&amp;#8217;s right &amp;#8211; no membership or subscription needed. Notice though that access to the stored video will still require a paid subscription, so don&amp;#8217;t miss out! Drop by tomorrow.&lt;/p&gt;
&lt;p&gt;Keep tabs on this site, as I&amp;#8217;ll be linking to a forum post with the stream link when it&amp;#8217;s available.&lt;/p&gt;
&lt;p&gt;Masterclass time: 22:00 European time, 16:00 East Coast, 13:00 Pacific time, 21:00 U.K.&lt;/p&gt;</description>
				<published>Sat Nov 27 00:00:00 +0100 2010</published>
				<link>http://angryant.com/2010/11/27/behave-master-class-on-open-aigamedev-stream-tomorrow/</link>
			</item>
			
		
			
			<item>
				<title>Interview with AIGameDev</title>
				<description>&lt;p&gt;November 28th I&amp;#8217;m doing a live interview with Alex Champandard of AIGameDev.com on the subject of Behave. We will be going in depth into how the tool is used, a bit of the back end and do a demo.&lt;/p&gt;
&lt;p&gt;Drop by. It&amp;#8217;ll be fun!&lt;/p&gt;
&lt;p&gt;Time: 22:00 European time, 16:00 East Coast, 13:00 Pacific time, 21:00 U.K.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://aigamedev.com/premium/event/session-behave-unity/&quot;&gt;http://aigamedev.com/premium/event/session-behave-unity/&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Fri Oct 29 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/10/29/interview-with-aigamedev/</link>
			</item>
			
		
			
			<item>
				<title>New video: From tree to code</title>
				<description>&lt;p&gt;Hey guys!&lt;/p&gt;
&lt;p&gt;This morning I recorded a video as a guide on how to go from installing Behave to using a behaviour tree in a script. I hope you guys find it useful.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/resources/behave/FromTreeToCode.mov&quot;&gt;From tree to code&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Sun Oct 24 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/10/24/new-video-from-tree-to-code/</link>
			</item>
			
		
			
			<item>
				<title>Issue tracking on github Behave release project</title>
				<description>&lt;p&gt;Hey guys&lt;/p&gt;
&lt;p&gt;Per request, I&amp;#8217;ve now set up a means of reporting issues and feature requests. I decided to do this though the github issue tracking system. You&amp;#8217;ll be able to track and report any issues or feature requests at this &lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/AngryAnt/Behave-release/issues/&quot;&gt;http://github.com/AngryAnt/Behave-release/issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Similarly, please use the Behave release thread on the Unity forums for questions and discussions on Behave:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://forum.unity3d.com/threads/61849-AI-Behaviour-trees-in-Unity-Behave-1.1-released/&quot;&gt;http://forum.unity3d.com/threads/61849-AI-Behaviour-trees-in-Unity-Behave-1.1-released&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Sat Oct 23 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/10/23/issue-tracking-on-github-behave-release-project/</link>
			</item>
			
		
			
			<item>
				<title>IT University Copenhagen Unity course completed</title>
				<description>&lt;p&gt;Hey guys!&lt;/p&gt;
&lt;p&gt;So that was the last of the five days of &amp;#8220;Exploring with Unity&amp;#8221; course at the Copenhagen IT University. Thanks for having us. It has been good fun.&lt;/p&gt;
&lt;p&gt;Sorry about the broken link to the files from Thursday. This is now fixed, and the files from today&amp;#8217;s lecture are available from this (verified) link:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/themes/angryant/downloads/ITUCourse2010/Friday.zip&quot;&gt;Friday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Fri Oct 22 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/10/22/it-university-copenhagen-unity-course-completed/</link>
			</item>
			
		
			
			<item>
				<title>IT University Copenhagen Unity course files Thursday</title>
				<description>&lt;p&gt;Hey guys!&lt;/p&gt;
&lt;p&gt;Attached to this post, you&amp;#8217;ll find the projects and resources used on today&amp;#8217;s lecture:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/themes/angryant/downloads/ITUCourse2010/Thursday.zip&quot;&gt;Thursday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Thu Oct 21 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/10/21/it-university-copenhagen-unity-course-files-thursday/</link>
			</item>
			
		
			
			<item>
				<title>CPH IT University Unity course files</title>
				<description>&lt;p&gt;Hey guys.&lt;/p&gt;
&lt;p&gt;For those of you not attending; Joe Robins and I are running a Unity course at the IT University of Copenhagen this week. Given the highly mixed crowd, the our lectures range from absolutely no Unity knowledge required to at least some understanding needed for full potential unlock.&lt;/p&gt;
&lt;p&gt;During these lectures, we create projects for demoing the focus of the lecture. These are either pre-prepared or built on stage and often get modified based on requests from the audience.&lt;/p&gt;
&lt;p&gt;So now that we are all on the same track:&lt;br /&gt;
Attached to this post you should find three zip files of the content we have gone through in the classes so far. This is their state post responding to questions, so some of the stuff demoed earlier on might differ slightly.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/themes/angryant/downloads/ITUCourse2010/Monday.zip&quot;&gt;Monday&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/themes/angryant/downloads/ITUCourse2010/Tuesday.zip&quot;&gt;Tuesday&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/themes/angryant/downloads/ITUCourse2010/Wednesday.zip&quot;&gt;Wednesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Wed Oct 20 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/10/20/cph-it-university-unity-course-files/</link>
			</item>
			
		
			
			<item>
				<title>Behave 1.2 released</title>
				<description>&lt;p&gt;That&amp;#8217;s right! I know it&amp;#8217;s only been &amp;#8230; uh &amp;#8230; well less time than I usually take to get it together and push out a new version. But since I was a bit on a roll with the release of Behave 1.1 not too long ago, and given that a last minute bug has snuck into that release, I decided to push on.&lt;/p&gt;
&lt;p&gt;So here we are &amp;#8211; new version out in a jiffy. What&amp;#8217;s new you say? This is what&amp;#8217;s new:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Fixed release building.&lt;/li&gt;
	&lt;li&gt;Added the priority selector, introducing the &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; points:
	&lt;ul&gt;
		&lt;li&gt;int IAgent.SelectTopPriority (Tree sender, params int[] IDs);&lt;/li&gt;
		&lt;li&gt;enum BL[LibraryName].PriorityType { PriorityName, &amp;#8230;, Unknown };&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;Added support for branch contexts, introducing the &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; points:
	&lt;ul&gt;
		&lt;li&gt;enum BL[LibraryName].ContextType { ContextName, &amp;#8230;, Unknown };&lt;/li&gt;
		&lt;li&gt;int Tree.ActiveContext { get; }&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;Changed IAgent interface:
	&lt;ul&gt;
		&lt;li&gt;Tick (bool init, Tree sender) &amp;#8594; Tick (Tree sender, bool init)&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;Added &amp;#8220;Select asset&amp;#8221; button to the standard inspector.&lt;/li&gt;
	&lt;li&gt;Interface polish.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;ll make sure to update the documentation to reflect the new &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; changes and yes, more is coming on that front.&lt;/p&gt;
&lt;p&gt;And yes I will be releasing a new demo project. I just wanted to make it something different, and nice for you guys, y&amp;#8217;know? So hang in there.&lt;/p&gt;</description>
				<published>Mon Oct 11 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/10/11/behave-1-2-released/</link>
			</item>
			
		
			
			<item>
				<title>Video: Behave - starting from scratch</title>
				<description>&lt;p&gt;I just finished uploading a new video for the Behave documentation section. It is a brief general introduction to the Behave authoring environment and shows you how to get up and running with Behave from a blank project.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;/behave/documentation/&quot;&gt;The documentation page&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;/resources/behave/StartingFromScratch.mov&quot;&gt;Direct link to the video&lt;/a&gt;.&lt;br /&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Wed Sep 29 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/09/29/video-behave-starting-from-scratch/</link>
			</item>
			
		
			
			<item>
				<title>Behave runtime documentation updated</title>
				<description>&lt;p&gt;It is no secret that the Behave documentation has been in a quite bad state for a while. With this release I intend to correct that and as a starting point, I have moved the outdated documentation offline and replaced it with documentation of the Behave runtime. Rest assured that I will be adding documentation on the authoring environment as well.&lt;/p&gt;
&lt;p&gt;Go check it out: &lt;a href=&quot;/behave/documentation/&quot;&gt;http://angryant.com/behave/documentation&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Wed Sep 29 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/09/29/behave-runtime-documentation-updated/</link>
			</item>
			
		
			
			<item>
				<title>Behave 1.1 released</title>
				<description>&lt;p&gt;Hello reader. It&amp;#8217;s been quite a while since my last conf&amp;#8230; post.&lt;/p&gt;
&lt;p&gt;Yea sorry about that. Busy, busy, but then again I suppose most had probably &lt;a href=&quot;http://unity3d.com/unity/&quot;&gt;figured that one out&lt;/a&gt;. However, I have had a bit of time here and there over the last few months to polish away on Behave and keep it compatible with Unity 3 as it developed.&lt;/p&gt;
&lt;p&gt;A lot of this keeping up to date work at times resulted in some good old fashion rewrites &amp;#8211; like the entire asset handling and parts of the compiler. This is probably not very interesting to you, but it is quite so to me as it has allowed me to restructure internally in ways that make the system as a whole more flexible and ready for change and additions.&lt;/p&gt;
&lt;p&gt;One of those additions which I did sneak in next to the polish and updating is a new debugger. The in-game debugger has been thrown out in favour of one living in your editor environment. &lt;span class=&quot;caps&quot;&gt;YAY&lt;/span&gt;! No really, yay. You will like this and not just because I say so. Ah and as much requested this one actually dives into sub-trees, making it actually quite useful compared to its predecessor.&lt;/p&gt;
&lt;p&gt;Oh and the compiler runs on Windows too now. And I also shaved off some cruft in the action/decorator handler syntax, making &lt;a href=&quot;http://arges-systems.com&quot;&gt;Ricardo&lt;/a&gt; extra happy.&lt;/p&gt;
&lt;p&gt;I will be putting up some short documentation for Behave 1.1 shortly, but if you still haven&amp;#8217;t decided to download yet, here is a short teaser on the new debugger: &lt;a href=&quot;http://angryant.com/Debugger.mov&quot;&gt;This text is a link to a movie file. Click it. It will be fun!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enough blabbering though. The package is available in the download section and the changelog is right here:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Made compatible with Unity 3.0 &amp;#8211; including ensuring that the 2.5-2.6.1 bug preventing compilation on Windows is fixed on the Unity side.&lt;/li&gt;
	&lt;li&gt;UI tweaks and polish.&lt;/li&gt;
	&lt;li&gt;Added the option to have return values of nodes be inverted.&lt;/li&gt;
	&lt;li&gt;Fixed compiler bug when facing sequence or selector with only one child node.&lt;/li&gt;
	&lt;li&gt;Renamed Library.Tree &amp;#8594; Library.InstantiateTree.&lt;/li&gt;
	&lt;li&gt;Added Tree.Tick () and Tree.Reset () methods using the IAgent instance given at instantiation of the tree.&lt;/li&gt;
	&lt;li&gt;Removed the abstract Library class.&lt;/li&gt;
	&lt;li&gt;Changed generated library class:
	&lt;ul&gt;
		&lt;li&gt;Trees &amp;#8594; TreeType.&lt;/li&gt;
		&lt;li&gt;Actions &amp;#8594; ActionType.&lt;/li&gt;
		&lt;li&gt;Decorators &amp;#8594; DecoratorType.&lt;/li&gt;
		&lt;li&gt;Tree InstantiateTree (int, IAgent) &amp;#8594; static Tree InstantiateTree (TreeType, IAgent)&lt;/li&gt;
		&lt;li&gt;int TreeID (Tree) &amp;#8594; static TreeType Type (Tree)&lt;/li&gt;
		&lt;li&gt;bool IsAction (int) &amp;#8594; static bool IsAction (int)&lt;/li&gt;
		&lt;li&gt;bool IsDecorator (int) &amp;#8594; static bool IsDecorator (int)&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;Upped editor performance.&lt;/li&gt;
	&lt;li&gt;New asset structure change with automatic import of Behave 1.0 assets.&lt;/li&gt;
	&lt;li&gt;Changed action and decorator handlers. These are now the handlers mapped:
	&lt;ul&gt;
		&lt;li&gt;public BehaveResult Init[Name][Action/Decorator] (Tree sender, string stringParameter, float floatParameter, IAgent agent, object data);&lt;/li&gt;
		&lt;li&gt;public BehaveResult Tick[Name][Action/Decorator] (Tree sender, string stringParameter, float floatParameter, IAgent agent, object data);&lt;/li&gt;
		&lt;li&gt;public void Reset[Name][Action/Decorator] (Tree sender, string stringParameter, float floatParameter, IAgent agent, object data);&lt;/li&gt;
		&lt;li&gt;public BehaveResult Init[Name][Action/Decorator] (Tree sender);&lt;/li&gt;
		&lt;li&gt;public BehaveResult Tick[Name][Action/Decorator] (Tree sender);&lt;/li&gt;
		&lt;li&gt;public void Reset[Name][Action/Decorator] (Tree sender);&lt;/li&gt;
		&lt;li&gt;public BehaveResult [Name][Action/Decorator] {get; set;}&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;Added support for collection duplication.&lt;/li&gt;
	&lt;li&gt;Moved debug rendering into the editor with its own dedicated debugger window, including actor listing.&lt;/li&gt;
	&lt;li&gt;Debugger now renders active sub-trees as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Oh and if you are upgrading a previous Behave install in a project, please see Readme.txt for details on snags you might hit and how to solve the whole thing in 4-5 steps.&lt;/p&gt;
&lt;p&gt;Ah and one more thing: Behave 1.1 removes the &amp;#8220;only for non-commercial work&amp;#8221; clause from the license.&lt;/p&gt;
&lt;p&gt;Have fun! And remember to tell me about all your awesome projects!&lt;/p&gt;</description>
				<published>Wed Sep 29 00:00:00 +0200 2010</published>
				<link>http://angryant.com/2010/09/29/behave-1-1-released/</link>
			</item>
			
		
			
			<item>
				<title>FAFF cleanup: Sketch</title>
				<description>&lt;p&gt;As some of you might have read, at Unity we have a thing called &lt;a href=&quot;http://blogs.unity3d.com/2009/11/18/fridays-are-for-fun/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;FAFF&lt;/span&gt;&lt;/a&gt; &amp;#8211; very much the same as Google and other IT businesses are doing. It generally lets you step out of the bit stream for a day and just, during work hours, go with whatever crazy idea(s) you&amp;#8217;ve been throwing around.&lt;/p&gt;
&lt;p&gt;Some of these ideas are pushed into the product later and others are just filed under &amp;#8220;something to play with when bored&amp;#8221; and &amp;#8220;now I can stop wondering about that&amp;#8221;. Sketch was a micro &lt;span class=&quot;caps&quot;&gt;FAFF&lt;/span&gt; project I just remembered I had filed under &amp;#8220;this was fun&amp;#8221; and then forgot all about. Since then I&amp;#8217;ve continued work on other projects and started new ones &amp;#8211; in all likelihood I&amp;#8217;ll not return to this project.&lt;/p&gt;
&lt;p&gt;So I figured I&amp;#8217;d push it to github and let you guys take it for a spin. If nothing else, it&amp;#8217;s a nice demo of what you can do with Unity editor scripting.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://eej.dk/angryant/wp-content/uploads/2010/03/Sketch.png&quot; title=&quot;Sketch&quot;&gt;&lt;img src=&quot;http://eej.dk/angryant/wp-content/uploads/2010/03/Sketch-300x202.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The idea of Sketch is to have simple tools inside the Unity editor to modify meshes in your assets. My goal with the project was never to turn Unity into a mesh authoring environment, but rather to give people an extra tool for rapid prototyping.&lt;/p&gt;
&lt;p&gt;So what&amp;#8217;s in there now? The simplest I could think of: Triangle selection and movement.&lt;/p&gt;
&lt;p&gt;Workflow:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Go to the GameObject &amp;#8594; Create Other menu and click Sketch Cube.&lt;/li&gt;
	&lt;li&gt;With the cube selected, click a triangle and with the handle that appears, drag it around to modify the mesh.&lt;/li&gt;
	&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;GOTO&lt;/span&gt; 1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Alternatively, you could drag in your own mesh from the Assets folder (make sure that it generates a mesh collider in its import settings) and attach the Sketch script to it.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;NOTICE&lt;/span&gt;: Sketch modifies the imported asset. This means that:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If you modify a some of the basic geometry meshes (such as GameObject &amp;#8594; Create Other &amp;#8594; Cube), the changes will apply to all cubes until editor relaunch.&lt;/li&gt;
	&lt;li&gt;If the geometry you&amp;#8217;re modifying is based on an imported 3D asset, reimporting it will mean you loose your changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Structure-wise, Sketch consists of two components: A MonoBehaviour (Sketch/Sketch.cs) and a custom inspector (Sketch/Editor/SketchEditor.cs). The purpose of the MonoBehaviour is merely to do some bookkeeping and provide utility functions (it will even destroy itself at runtime) while the custom inspector holds the logic for doing the modifications.&lt;/p&gt;
&lt;p&gt;Woah. That&amp;#8217;s a lot of talk. Here&amp;#8217;s the repository &amp;#8211; go nuts: &lt;a href=&quot;http://github.com/AngryAnt/Sketch/&quot;&gt;http://github.com/AngryAnt/Sketch&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Fri Mar 19 00:00:00 +0100 2010</published>
				<link>http://angryant.com/2010/03/19/faff-cleanup-sketch/</link>
			</item>
			
		
			
			<item>
				<title>Building a menu of delegates and enums</title>
				<description>&lt;p&gt;I like delegates. I also like enums. Furthermore, I happen to be part of a small group of people who actually enjoy the immediate mode &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; system in Unity. And I want you to like it too :)&lt;/p&gt;
&lt;p&gt;So &amp;#8211; menus. After having observed quite a few very funky approaches, in the &lt;a href=&quot;http://www.unifycommunity.com/wiki/index.php?title=IRC&quot;&gt;&lt;span class=&quot;caps&quot;&gt;IRC&lt;/span&gt;&lt;/a&gt; channel, to building main menu functionality and giving advice in there, I decided to sow together those ideas into a short example.&lt;/p&gt;
&lt;p&gt;The main idea here is to be able to build and manage a menu system quickly and easily. This line adds a new submenu to the system &amp;#8211; designated MyMenuState and implemented in the OnMyMenuGUI method:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;m_Menus [MenuState.MyMenuState] = OnMyMenuGUI;&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Notice that since we&amp;#8217;re using delegates, the &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; method needn&amp;#8217;t be implemented in the same script and could even  live on an entirely different GameObject. Why is this so clever (besides enums and delegates being cool)? Because managing and switching between menus set up like this is insanely easy. This is the central &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; method for the menu system:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
    m_Menus [m_CurrentState] ();&lt;br /&gt;
}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;And this is &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; code inside a menu &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; method for switching to a different submenu:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;m_CurrentState = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Credits&lt;/span&gt;&amp;quot;) ? MenuState.Credits : m_CurrentState;&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;So there. Enough talk. Have some example code:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections.Generic&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; Menu : &lt;span class=&quot;support support_class support_class_unity&quot;&gt;MonoBehaviour&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; OnGUIImplementation();&lt;br /&gt;
&lt;span class=&quot;meta meta_definition meta_definition_property meta_definition_property_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;MenuState&lt;/span&gt; &lt;/span&gt;{Main,&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Settings&lt;/span&gt;,Credits};&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Settings&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;bool&lt;/span&gt; m_ThisSetting, m_ThatSetting, m_TheOtherSetting;&lt;br /&gt;
    };&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Vector2&lt;/span&gt; m_StandardMenuSize = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Vector2&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;200.0f&lt;/span&gt;, &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;300.0f&lt;/span&gt;);&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; m_LogoURL = &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;http://download.unity3d.com/images/top-menu/mm_unity_icon.png&lt;/span&gt;&amp;#8220;;&lt;br /&gt;
    &amp;#8221;storage storage_modifier storage_modifier_csharp&amp;quot;&amp;gt;static&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Texture2D&lt;/span&gt; m_Logo = &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;;&lt;/p&gt;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; MenuState m_CurrentState = MenuState.Main;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; Dictionary&amp;lt;MenuState, OnGUIImplementation&amp;gt; m_Menus;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Settings&lt;/span&gt; m_Settings;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;Awake&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        m_Menus = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; Dictionary&amp;lt;MenuState, OnGUIImplementation&amp;gt; ();&lt;br /&gt;
        m_Menus [MenuState.Main] = OnMainMenuGUI;&lt;br /&gt;
        m_Menus [MenuState.&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Settings&lt;/span&gt;] = OnSettingsGUI;&lt;br /&gt;
        m_Menus [MenuState.Credits] = OnCreditsGUI;&lt;br /&gt;
        StartCoroutine (GetLogo ());&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;IEnumerator&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;GetLogo&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;WWW&lt;/span&gt;&lt;/span&gt; www = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;WWW&lt;/span&gt;&lt;/span&gt; (m_LogoURL);&lt;/p&gt;
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; www;
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (www.error == &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;)
{
m_Logo = www.texture;
}
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        m_Menus [m_CurrentState] ();&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;BeginStandardMenu&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; title&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginArea (&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Rect&lt;/span&gt; ((&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Screen&lt;/span&gt;.width &amp;#8211; m_StandardMenuSize.x) * &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;0.5f&lt;/span&gt;, (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Screen&lt;/span&gt;.height &amp;#8211; m_StandardMenuSize.y) * &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;0.5f&lt;/span&gt;, m_StandardMenuSize.x, m_StandardMenuSize.y));&lt;br /&gt;
            &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginVertical (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.skin.GetStyle (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Box&lt;/span&gt;&amp;#8220;));&lt;br /&gt;
                &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.Label (title, &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.skin.GetStyle (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Box&lt;/span&gt;&amp;quot;));&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;EndStandardMenu&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Color&lt;/span&gt; color;&lt;/p&gt;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginHorizontal ();
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();
color = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.color;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.color = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Color&lt;/span&gt;.grey;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Label (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;My game version 2.4X&lt;/span&gt;&amp;quot;);
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.color = color;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndHorizontal ();
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndVertical ();
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndArea ();
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnMainMenuGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        BeginStandardMenu (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Main menu&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
            &amp;#8221;keyword keyword_control keyword_control_csharp&amp;quot;&amp;gt;if&lt;/span&gt; (m_Logo != &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;)&lt;br /&gt;
            {&lt;br /&gt;
                &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginHorizontal ();&lt;br /&gt;
                    &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
                        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Label (m_Logo);&lt;br /&gt;
                    &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
                &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndHorizontal ();&lt;br /&gt;
            }&lt;br /&gt;
            &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;New game&lt;/span&gt;&amp;#8220;))&lt;br /&gt;
            {&lt;br /&gt;
                &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;Application&lt;/span&gt;.LoadLevel (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Level one&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
            }&lt;br /&gt;
            m_CurrentState = &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.Button (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Settings&lt;/span&gt;&amp;quot;) ? MenuState.&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Settings&lt;/span&gt; : m_CurrentState;&lt;br /&gt;
            m_CurrentState = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Credits&lt;/span&gt;&amp;#8220;) ? MenuState.Credits : m_CurrentState;&lt;br /&gt;
            &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
        EndStandardMenu ();&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnSettingsGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        BeginStandardMenu (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Settings&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
            m_Settings.m_ThisSetting = &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.Toggle (m_Settings.m_ThisSetting, &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;This setting&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
            m_Settings.m_ThatSetting = &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.Toggle (m_Settings.m_ThatSetting, &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;That setting&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
            m_Settings.m_TheOtherSetting = &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.Toggle (m_Settings.m_TheOtherSetting, &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;The other setting&lt;/span&gt;&amp;#8220;, &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUI&lt;/span&gt;.skin.GetStyle (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Button&lt;/span&gt;&amp;#8220;));&lt;br /&gt;
            &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
            m_CurrentState = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Main menu&lt;/span&gt;&amp;quot;) ? MenuState.Main : m_CurrentState;&lt;br /&gt;
        EndStandardMenu ();&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnCreditsGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        BeginStandardMenu (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Credits&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
            &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.Label (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;This game was created by some of the most awesomestest people on the planet. Having failed in their mission to Pluto, they started making games, which &amp;#8211; as you can see &amp;#8211; resulted in much joy and success!&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
                &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Space&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;20.0f&lt;/span&gt;);&lt;br /&gt;
                &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginHorizontal ();&lt;br /&gt;
                    &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
                        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Label (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;The awesomestest people inc.&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
                &amp;#8221;support support_class support_class_unity&amp;quot;&amp;gt;GUILayout&lt;/span&gt;.EndHorizontal ();&lt;/p&gt;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();
m_CurrentState = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Main menu&lt;/span&gt;&amp;quot;) ? MenuState.Main : m_CurrentState;
EndStandardMenu ();
}
&lt;p&gt;}&lt;br /&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;hr&gt;&lt;br /&gt;
Example project: &lt;a href=&quot;http://eej.dk/angryant/wp-content/uploads/2010/03/Menu.zip&quot;&gt;Menu.zip&lt;/a&gt; &amp;#8211; built with Unity 2.6.1&lt;/p&gt;</description>
				<published>Mon Mar 15 00:00:00 +0100 2010</published>
				<link>http://angryant.com/2010/03/15/building-a-menu-of-delegates-and-enums/</link>
			</item>
			
		
			
			<item>
				<title>Pick me! Pick me!</title>
				<description>&lt;p&gt;Say you&amp;#8217;re developing an &lt;span class=&quot;caps&quot;&gt;RTS&lt;/span&gt; or maybe a connect-the-dots sort of game. What would be the easiest way to go about handling object selection? This is my suggested solution.&lt;/p&gt;
&lt;p&gt;In the given example, I&amp;#8217;m taking advantage of the object-mouse event handling that MonoBehaviours on GameObject with colliders on them give for free. You might be in a scenario where raycasting or otherwise resolving selection requests makes more sense, but the basic logic still applies. This example is merely intended to get your from start to goal as fast as possible.&lt;/p&gt;
&lt;p&gt;First off, we need a selection manager class (cleverly named SelectionManager in my example). This is where we store selection state and via static accessors, we can get and modify the current selection. Seeing as this class is both public and all accessors are static, you can put its source anywhere. In my example I&amp;#8217;ve simply put it right after the MonoBehaviour used for testing it.&lt;/p&gt;
&lt;p&gt;SelectionManager&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; SelectionManager&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; s_ActiveSelection;&lt;/p&gt;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; ActiveSelection
{
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;get&lt;/span&gt;
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; s_ActiveSelection;
}
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;set&lt;/span&gt;
{
s_ActiveSelection = &lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;value&lt;/span&gt;;
}
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; gameObject, &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;bool&lt;/span&gt; selectionValue&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (selectionValue)&lt;br /&gt;
        {&lt;br /&gt;
            Select (gameObject);&lt;br /&gt;
        }&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
        {&lt;br /&gt;
            Deselect (gameObject);&lt;br /&gt;
        }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; gameObject&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        ActiveSelection = gameObject;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;Deselect&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; gameObject&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (ActiveSelection == gameObject)&lt;br /&gt;
        {&lt;br /&gt;
            ActiveSelection = &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;;&lt;br /&gt;
        }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;IsSelected&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; gameObject&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; ActiveSelection == gameObject;&lt;br /&gt;
    }&lt;br /&gt;
}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;And the promised MonoBehaviour using the SelectionManager class:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; SelectableObject : &lt;span class=&quot;support support_class support_class_unity&quot;&gt;MonoBehaviour&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Rect&lt;/span&gt; m_SelectionWindowRect = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Rect&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;10.0f&lt;/span&gt;, &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;10.0f&lt;/span&gt;, &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;300.0f&lt;/span&gt;, &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;100.0f&lt;/span&gt;);&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnMouseDown&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        SelectionManager.Select (gameObject, !SelectionManager.IsSelected (gameObject));&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnDisable&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        SelectionManager.Deselect (gameObject);&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        renderer.material.color = SelectionManager.IsSelected (gameObject) ? &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Color&lt;/span&gt;.green : &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Color&lt;/span&gt;.white;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (SelectionManager.IsSelected (gameObject))&lt;br /&gt;
        {&lt;br /&gt;
            m_SelectionWindowRect = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.Window (GetInstanceID (), m_SelectionWindowRect, SelectionWindow, gameObject.name);&lt;br /&gt;
        }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;SelectionWindow&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;int&lt;/span&gt; id&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Box (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;I am the selection and my name is &lt;/span&gt;&amp;quot; + gameObject.name);&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.DragWindow ();&lt;br /&gt;
    }&lt;br /&gt;
}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;And that is all there is to it. By popular demand, I&amp;#8217;m now starting to provide pre-built projects with these tips and tricks posts. Download, unzip, open and play. Requires Unity 2.6.1:&lt;br /&gt;
&lt;a href='http://eej.dk/angryant/wp-content/uploads/2010/03/SelectableObject.zip'&gt;SelectableObject&lt;/a&gt;&lt;/p&gt;</description>
				<published>Wed Mar 10 00:00:00 +0100 2010</published>
				<link>http://angryant.com/2010/03/10/pick-me-pick-me/</link>
			</item>
			
		
			
			<item>
				<title>Optimising coroutine yielding in C#</title>
				<description>&lt;p&gt;When needing to yield a coroutine for a single frame in C#, most people &amp;#8211; including myself usually go about it this way:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;IEnumerator&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;DoFadeAlphaIn&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;while&lt;/span&gt; (m_Alpha &amp;lt; &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;1.0f&lt;/span&gt;)&lt;br /&gt;
    {&lt;br /&gt;
        m_Alpha += &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Time&lt;/span&gt;.deltaTime;&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;0&lt;/span&gt;;&lt;br /&gt;
    }&lt;br /&gt;
    m_Alpha = &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;1.0f&lt;/span&gt;;&lt;br /&gt;
}&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt;
However, as Rodrigo recently brought to my attention, this approach ofcourse performs unneeded memory allocation, given that the zero needs boxing and unboxing before its passed to the coroutine system. Using null in stead saves you that work and allocation.&lt;/p&gt;
&lt;p&gt;This might not seem like a lot at first glance, but if you make this a habit every time you need to yield for a frame, I guarantee you that you&amp;#8217;ll see results in larger scenarios.&lt;/p&gt;
&lt;p&gt;The more optimal way of yielding for a single frame in C#. Minor difference, but allocation saved &amp;#8211; which is always awesome:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;IEnumerator&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;DoFadeAlphaIn&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;while&lt;/span&gt; (m_Alpha &amp;lt; &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;1.0f&lt;/span&gt;)&lt;br /&gt;
    {&lt;br /&gt;
        m_Alpha += &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Time&lt;/span&gt;.deltaTime;&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;;&lt;br /&gt;
    }&lt;br /&gt;
    m_Alpha = &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;1.0f&lt;/span&gt;;&lt;br /&gt;
}&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt;
An interesting test could be to, on a larger co-routine heavy project, do a project-wide find and replace on &amp;#8220;yield return 0;&amp;#8221; and &amp;#8220;yield return null;&amp;#8221; back and forth and measuring the performance difference with the profiler (for non-pro users, maybe the performance gain is even measurable using external monitoring tools).&lt;/p&gt;</description>
				<published>Thu Jan 14 00:00:00 +0100 2010</published>
				<link>http://angryant.com/2010/01/14/optimising-coroutine-yielding-in-c/</link>
			</item>
			
		
			
			<item>
				<title>Downloading the hydra</title>
				<description>&lt;p&gt;So I&amp;#8217;ve seen some people asking how you would go about downloading executable code from an external location, reading it into memory and executing it in ones running application.&lt;/p&gt;
&lt;p&gt;Now some readers might go &amp;#8220;eh? why the heck would someone want to do that?&amp;#8221;. Well first off, &lt;b&gt;its cool&lt;/b&gt;&amp;trade;, but seeing as that is rarely an argument which convinces decision makers, here&amp;#8217;s a few others:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Patching. The ability to modify the behaviour of your downloaded executable after distribution, without requiring re-download.&lt;/li&gt;
&lt;li&gt;Highly dynamic online content. Say you&amp;#8217;re building a virtual world or something. You might want to have the ability to add more complex behaviours to downloaded content &amp;#8211; more than what a data-driven approach allows for.&lt;/li&gt;
&lt;li&gt;Or how about expanding the capabilities of user generated content?&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;There. Those are my alibis and I&amp;#8217;m sticking to them.&lt;/p&gt;
&lt;p&gt;Now this example is quick and simple so as to not bloat the post too much. Regardless of your use, you&amp;#8217;ll likely be wanting to add in for instance some cache functionality for real-world use.&lt;/p&gt;
&lt;p&gt;Right. So this example contains three pieces of eight, uh, code:&lt;br /&gt;
&lt;ul&gt;&lt;li&gt;The loader utility &amp;#8211; responsible for downloading and making available the remote code.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;The assembly &amp;#8211; you know, the one we&amp;#8217;re downloading.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;An example handler. For easy re-use, I&amp;#8217;ve designed this example to allow for easy re-use of the loader utility by externalising handling of the assemblies via messages. This example handler shows some techniques for accessing the data of loaded assemblies.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;Using the example:&lt;br /&gt;
&lt;ol&gt;&lt;li&gt;Download and save /Assets/WWWAssemblyLoader.cs, /Assets/NewBehaviourScript.cs and /MyAssembly.cs.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Download and install the mono runtime (or the .net equivalent on Windnows &amp;#8211; not tested, but should work just fine).&lt;/li&gt;&lt;br /&gt;
 &lt;li&gt;Build the assembly from the terminal &amp;#8211; using the build command supplied at the end of this post.&lt;/li&gt;&lt;br /&gt;
 &lt;li&gt;Upload the assembly to some host (save the &lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt; for later).&lt;/li&gt;&lt;br /&gt;
 &lt;li&gt;Open up your Unity project.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Add the WWWAssemblyLoader and NewBehaviourScript scripts to a GameObject and set the &lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt; property of the first to that of your uploaded assembly.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Press play.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Profit!&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;
&lt;p&gt;And now the codes!&lt;/p&gt;
&lt;p&gt;&lt;b&gt;/Assets/WWWAssemblyLoader.cs&lt;/b&gt;&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Reflection&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; WWWAssemblyLoader : &lt;span class=&quot;support support_class support_class_unity&quot;&gt;MonoBehaviour&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; m_AssemblyURL;&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; m_ErrorString = &amp;quot;&amp;quot;;&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;WWW&lt;/span&gt;&lt;/span&gt; m_WWW;&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;bool&lt;/span&gt; m_Complete = &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;true&lt;/span&gt;;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;Start&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (m_AssemblyURL != &amp;quot;&amp;quot;)&lt;br /&gt;
        {&lt;br /&gt;
            ReloadAssembly (m_AssemblyURL);&lt;br /&gt;
        }&lt;br /&gt;
    }&lt;/p&gt;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; AssemblyURL
{
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;get&lt;/span&gt;
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; m_AssemblyURL;
}
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;set&lt;/span&gt;
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (m_AssemblyURL != &lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;value&lt;/span&gt;)
{
ReloadAssembly (&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;value&lt;/span&gt;);
}
}
}
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;float&lt;/span&gt; Progress
{
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;get&lt;/span&gt;
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; m_Complete ? &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;1.0f&lt;/span&gt; : m_WWW.progress;
}
}
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; Error
{
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;get&lt;/span&gt;
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; m_ErrorString;
}
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;ReloadAssembly&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; url&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        m_Complete = &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;false&lt;/span&gt;;&lt;br /&gt;
        m_ErrorString = &amp;quot;&amp;quot;;&lt;br /&gt;
        m_AssemblyURL = url;&lt;br /&gt;
        m_WWW = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;WWW&lt;/span&gt;&lt;/span&gt; (m_AssemblyURL);&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (!m_Complete)&lt;br /&gt;
        {&lt;br /&gt;
            &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (m_WWW.error != &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;)&lt;br /&gt;
            {&lt;br /&gt;
                m_ErrorString = m_WWW.error;&lt;br /&gt;
                m_Complete = &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;true&lt;/span&gt;;&lt;br /&gt;
                SendMessage (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;OnAssemblyLoadFailed&lt;/span&gt;&amp;#8220;, m_AssemblyURL);&lt;br /&gt;
            }&lt;br /&gt;
            &amp;#8221;keyword keyword_control keyword_control_csharp&amp;quot;&amp;gt;else&lt;/span&gt; &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (m_WWW.isDone)&lt;br /&gt;
            {&lt;br /&gt;
                Assembly assembly = LoadAssembly ();&lt;br /&gt;
                m_Complete = &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;true&lt;/span&gt;;&lt;br /&gt;
                &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (assembly != &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;)&lt;br /&gt;
                {&lt;br /&gt;
                    &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Debug&lt;/span&gt;.Log (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Done&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
                    SendMessage (&amp;#8221;&lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&gt;OnAssemblyLoaded&lt;/span&gt;&amp;#8220;, &amp;#8221;keyword keyword_control keyword_control_csharp&amp;quot;&amp;gt;new&lt;/span&gt; WWWAssembly (m_AssemblyURL, assembly));&lt;br /&gt;
                }&lt;br /&gt;
                &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
                {&lt;br /&gt;
                    &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Debug&lt;/span&gt;.Log (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Failed&lt;/span&gt;&amp;#8220;);&lt;br /&gt;
                    SendMessage (&amp;#8221;&lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&gt;OnAssemblyLoadFailed&lt;/span&gt;&amp;quot;, m_AssemblyURL);&lt;br /&gt;
                }&lt;br /&gt;
            }&lt;br /&gt;
        }&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;Assembly&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;LoadAssembly&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;try&lt;/span&gt;&lt;br /&gt;
        {&lt;br /&gt;
            &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; Assembly.Load (m_WWW.bytes);&lt;br /&gt;
        }&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;catch&lt;/span&gt; (System.Exception e)&lt;br /&gt;
        {&lt;br /&gt;
            m_ErrorString = e.ToString ();&lt;br /&gt;
            &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;;&lt;br /&gt;
        }&lt;br /&gt;
    }&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; WWWAssembly&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; m_URL;&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; Assembly m_Assembly;&lt;/p&gt;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt;
{
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;get&lt;/span&gt;
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; m_URL;
}
}
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; Assembly Assembly
{
&lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&gt;get&lt;/span&gt;
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; m_Assembly;
}
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;WWWAssembly&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; url, Assembly assembly&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        m_URL = url;&lt;br /&gt;
        m_Assembly = assembly;&lt;br /&gt;
    }&lt;br /&gt;
}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;/Assets/NewBehaviourScript.cs&lt;/b&gt;&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Reflection&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; NewBehaviourScript : &lt;span class=&quot;support support_class support_class_unity&quot;&gt;MonoBehaviour&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; m_MessageString = &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Waiting for assembly&lt;/span&gt;&amp;quot;;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnAssemblyLoaded&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(WWWAssembly loadedAssembly&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        m_MessageString = &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Assembly &lt;/span&gt;&amp;quot; + loadedAssembly.&lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt; + &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;&lt;span class=&quot;constant constant_character constant_character_escape constant_character_escape_csharp&quot;&gt;\n&lt;/span&gt;&lt;/span&gt;&amp;quot;;&lt;/p&gt;
System.Type type = loadedAssembly.Assembly.GetType (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;MyClass&lt;/span&gt;&amp;quot;);
FieldInfo field = type.GetField (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;myString&lt;/span&gt;&amp;quot;);
m_MessageString += (field.GetValue (&lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt;) + &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;&lt;span class=&quot;constant constant_character constant_character_escape constant_character_escape_csharp&quot;&gt;\n&lt;/span&gt;&lt;/span&gt;&amp;quot;;
&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;object&lt;/span&gt; instance = loadedAssembly.Assembly.CreateInstance (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;MyClass&lt;/span&gt;&amp;quot;);
MethodInfo method = type.GetMethod (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;LogMyString&lt;/span&gt;&amp;quot;);
m_MessageString += &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Return value: &lt;/span&gt;&amp;quot; + method.Invoke (instance, &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;).ToString ();
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnAssemblyLoadFailed&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; url&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        m_MessageString = &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Failed to load assembly at &lt;/span&gt;&amp;quot; + url;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginArea (&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Rect&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Screen&lt;/span&gt;.width, &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Screen&lt;/span&gt;.height));&lt;br /&gt;
            &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
            &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginHorizontal ();&lt;br /&gt;
                &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
                &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Box (m_MessageString);&lt;br /&gt;
                &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
            &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndHorizontal ();&lt;br /&gt;
            &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndArea ();&lt;br /&gt;
    }&lt;br /&gt;
}&lt;br /&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;/MyAssembly.cs&lt;/b&gt;&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; MyClass&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt; myString = &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;This is my string from my class in my assembly&lt;/span&gt;&amp;quot;;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;LogMyString&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Debug&lt;/span&gt;.Log (myString);&lt;br /&gt;
        &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;2&lt;/span&gt; + &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;2&lt;/span&gt;;&lt;br /&gt;
    }&lt;br /&gt;
}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;The assembly compile terminal command&lt;/b&gt;&lt;br /&gt;
&lt;i&gt;mcs -target:library -out:MyAssembly.dll -r:/Applications/Unity/Unity.app/Contents/Frameworks/UnityEngine.dll  MyAssembly.cs&lt;/i&gt;&lt;/p&gt;</description>
				<published>Tue Jan 05 00:00:00 +0100 2010</published>
				<link>http://angryant.com/2010/01/05/downloading-the-hydra/</link>
			</item>
			
		
			
			<item>
				<title>New license of Path: GPL</title>
				<description>&lt;p&gt;Since I started at Unity, I haven&amp;#8217;t really had the time to do much updating (read: none) of my private projects. In sheer size, Path is the largest of those, so a while ago I realised that maintaining that project is simply not feasible.&lt;/p&gt;
&lt;p&gt;By adding the &lt;span class=&quot;caps&quot;&gt;GPL&lt;/span&gt; license option to the existing two license options (the show-my-logo license displayed on &lt;a href=&quot;/path/downloads/&quot;&gt;download from angryant.com&lt;/a&gt; and the option for a custom negotiated one), users are able to test and modify the source of Path directly &amp;#8211; before deciding on one of the other licenses.&lt;/p&gt;
&lt;p&gt;Also, although very messy (yes &amp;#8211; very), the source could also serve as a good learning resource for Unity editor scripting.&lt;/p&gt;
&lt;p&gt;The project repository is available on &lt;a href=&quot;http://github.com/AngryAnt/Path-GPL&quot;&gt;github&lt;/a&gt; .&lt;/p&gt;</description>
				<published>Sun Nov 15 00:00:00 +0100 2009</published>
				<link>http://angryant.com/2009/11/15/new-license-of-path-gpl/</link>
			</item>
			
		
			
			<item>
				<title>CopyInspector</title>
				<description>&lt;p&gt;Yea I know. It&amp;#8217;s been a while. I do have two very good excuses though: 2.6 and Unite &amp;#8216;09. If you enjoyed those then zip it and read on. If not, I&amp;#8217;m really out of ammo and sorry for the delay.&lt;/p&gt;
&lt;p&gt;At Unite, I attended the talk by John Grden of infrared5 on the special (free) Unity for flash users day. During this session he complained about wanting to be able to copy his runtime transform changes inside the &lt;span class=&quot;caps&quot;&gt;IDE&lt;/span&gt; (he was copying by way of paper notes it seemed). I decided to take up the challenge when he continued with &amp;#8220;&amp;#8230; but someone is probably going to show me how to do that after this&amp;#8221; and after his talk I handed him a custom inspector editor script for solving that specific problem.&lt;/p&gt;
&lt;p&gt;Later at the conference I had some time to kill and did a rewrite to expand the script to be general for any component type. I didn&amp;#8217;t have the time to hand John that version, but I suppose I&amp;#8217;ll just email him a link to this post.&lt;/p&gt;
&lt;ul&gt;So anyway &amp;#8211; lets talk implementation:&lt;br /&gt;
&lt;li&gt;Add CopyInspector.cs to Assets/Editor.&lt;/li&gt;
&lt;li&gt;Add CopyTransformInspector.cs to Assets/Editor.&lt;/li&gt;
&lt;li&gt;For each other component to be made copy/paste-able:&lt;ul&gt;&lt;br /&gt;
&lt;li&gt;Add CopyYourComponentTypeInspector.cs to Assets/Editor.&lt;/li&gt;
&lt;li&gt;Rename it appropriately.&lt;/li&gt;
&lt;li&gt;Rename the class to match the file name.&lt;/li&gt;
&lt;li&gt;Change YourComponentType in &amp;#8220;[CustomEditor (typeof (YourComponentType))]&amp;#8221; to the type of component you wish to affect.&lt;/li&gt;
&lt;p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;You&amp;#8217;ll notice that CopyTransformInspector has some additional code to it. This is due to the fact that this inspector is rendered non-standard and the code provided just replicates that.&lt;/p&gt;
&lt;p&gt;[caption id=&amp;#8220;attachment_339&amp;#8221; align=&amp;#8220;aligncenter&amp;#8221; width=&amp;#8220;260&amp;#8221; caption=&amp;#8220;The copy transform inspector&amp;#8221;]&lt;img src=&quot;http://eej.dk/angryant/wp-content/uploads/2009/11/CopyTransformInspector.png&quot; alt=&quot;The copy transform inspector&quot; title=&quot;CopyTransformInspector&quot; width=&quot;260&quot; height=&quot;149&quot; class=&quot;size-full wp-image-339&quot; /&gt;[/caption]&lt;/p&gt;
&lt;p&gt;Not really sure why syntax highlighting is not kicking in&amp;#8230; Will have a look at that later.&lt;/p&gt;
&lt;p&gt;Codes!&lt;/p&gt;
&lt;p&gt;CopyInspector.cs&lt;br /&gt;
&lt;pre class=&quot;textmate-source&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEditor&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections.Generic&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Reflection&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; CopyInspector : &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Editor&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static&lt;/span&gt; System.Type m_OriginalType;&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static&lt;/span&gt; Dictionary &amp;lt;PropertyInfo, &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;object&lt;/span&gt;&amp;gt; m_Values;&lt;/p&gt;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; List &lt;PropertyInfo&gt; GetProperties (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt; component)
{
List &amp;lt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt;&amp;gt; ignoredProperties;
List &lt;PropertyInfo&gt; properties;
properties = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; List &lt;PropertyInfo&gt; ();
ignoredProperties = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; List &amp;lt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;string&lt;/span&gt;&amp;gt; ();
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt; (PropertyInfo propertyInfo &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;typeof&lt;/span&gt; (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt;).GetProperties ())
{
ignoredProperties.Add (propertyInfo.Name);
}
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt; (PropertyInfo propertyInfo &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; component.GetType ().GetProperties ())
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (ignoredProperties.Contains (propertyInfo.Name))
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;continue&lt;/span&gt;;
}
properties.Add (propertyInfo);
}
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt; properties;
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public override &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnInspectorGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        DrawDefaultInspector ();&lt;br /&gt;
        OnCopyInspectorGUI ();&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnCopyInspectorGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;bool&lt;/span&gt; enabled;&lt;br /&gt;
        List &lt;PropertyInfo&gt; properties;&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt; component;&lt;/p&gt;
component = target &lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt;;
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (component == &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;)
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;return&lt;/span&gt;;
}
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Space&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;10.0f&lt;/span&gt;);
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Color&lt;/span&gt; backgroundColor = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.backgroundColor;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.backgroundColor = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Color&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;0.8f&lt;/span&gt;, &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;0.8f&lt;/span&gt;, &lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;0.8f&lt;/span&gt;);
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginVertical (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Toolbar&lt;/span&gt;&amp;quot;);
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.backgroundColor = backgroundColor;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginHorizontal ();
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Space&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;10.0f&lt;/span&gt;);
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Label (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Copied: &lt;/span&gt;&amp;quot; + (m_OriginalType != &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt; ? m_OriginalType.Name : &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Nothing&lt;/span&gt;&amp;quot;), &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;MiniLabel&lt;/span&gt;&amp;quot;);
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace ();
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button (&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUIContent&lt;/span&gt; (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Copy&lt;/span&gt;&amp;quot;, &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Copy component values&lt;/span&gt;&amp;quot;), &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;MiniLabel&lt;/span&gt;&amp;quot;))
{
m_OriginalType = target.GetType ();
properties = GetProperties (component);
m_Values = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; Dictionary &amp;lt;PropertyInfo, &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;object&lt;/span&gt;&amp;gt; ();
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt; (PropertyInfo property &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; properties)
{
m_Values [property] = property.GetValue (component, &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;);
}
}
enabled = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.enabled;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.enabled = target.GetType () == m_OriginalType;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Space&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;10.0f&lt;/span&gt;);
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button (&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUIContent&lt;/span&gt; (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Paste&lt;/span&gt;&amp;quot;, &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Paste component values&lt;/span&gt;&amp;quot;), &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;MiniLabel&lt;/span&gt;&amp;quot;))
{
properties = GetProperties (component);
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt; (PropertyInfo property &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; properties)
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (!property.CanWrite)
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;continue&lt;/span&gt;;
}
property.SetValue (component, m_Values [property], &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt;);
}
}
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Space&lt;/span&gt; (&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;10.0f&lt;/span&gt;);
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.enabled = enabled;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndHorizontal ();
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndVertical ();
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Space&lt;/span&gt; (-&lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&gt;2.0f&lt;/span&gt;);
}
&lt;p&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;CopyTransformInspector.cs&lt;br /&gt;
&lt;pre class=&quot;textmate-source&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEditor&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;[&lt;span class=&quot;support support_class support_class_unity&quot;&gt;CustomEditor&lt;/span&gt; (&lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;typeof&lt;/span&gt; (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Transform&lt;/span&gt;))]&lt;br /&gt;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; CopyTransformInspector : CopyInspector&lt;br /&gt;
{&lt;br /&gt;
&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public override &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnInspectorGUI&lt;/span&gt; &lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Transform&lt;/span&gt; transform;&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Vector3&lt;/span&gt; localPosition, localScale;&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Quaternion&lt;/span&gt; localRotation;&lt;/p&gt;
transform = target &lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Transform&lt;/span&gt;;
localPosition = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;EditorGUILayout&lt;/span&gt;.Vector3Field (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Position&lt;/span&gt;&amp;quot;, transform.localPosition);
localRotation = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Quaternion&lt;/span&gt;.Euler (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;EditorGUILayout&lt;/span&gt;.Vector3Field (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Rotation&lt;/span&gt;&amp;quot;, transform.localRotation.eulerAngles));
localScale = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;EditorGUILayout&lt;/span&gt;.Vector3Field (&amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Scale&lt;/span&gt;&amp;quot;, transform.localScale);
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.changed)
{
transform.localPosition = localPosition;
transform.localRotation = localRotation;
transform.localScale = localScale;
}
OnCopyInspectorGUI ();
}
&lt;p&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;CopyYourComponentTypeInspector.cs&lt;br /&gt;
&lt;pre class=&quot;textmate-source&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEditor&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;[&lt;span class=&quot;support support_class support_class_unity&quot;&gt;CustomEditor&lt;/span&gt; (&lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;typeof&lt;/span&gt; (YourComponentType))]&lt;br /&gt;
&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; CopyYourComponentTypeInspector : CopyInspector{}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;</description>
				<published>Wed Nov 04 00:00:00 +0100 2009</published>
				<link>http://angryant.com/2009/11/04/copyinspector/</link>
			</item>
			
		
			
			<item>
				<title>Magnetic</title>
				<description>&lt;p&gt;You know how Little Big Planet, Kingdom Hearts and similar have various pickups move towards your character when you get up close? Yea I also find that&amp;#8217;s a nice bit of polish.&lt;/p&gt;
&lt;p&gt;One way of getting that up and running in Unity is via the code below. Setup:&lt;br /&gt;
&lt;ol&gt;&lt;br /&gt;
&lt;li&gt;Add all objects you want to get attracted to the player to a special layer.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Attach the script below to your player.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Set the layer mask on the component to include the layer from step one.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Tweak, play, repeat.&lt;/li&gt;&lt;/p&gt;
&lt;p&gt;&lt;/ol&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Magnetic.cs:&lt;/p&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&amp;lt;span class=&quot;source source_csharp&quot;&amp;gt;&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;UnityEngine&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;System.Collections&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;class&amp;lt;/span&amp;gt; Magnetic : &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;MonoBehaviour&amp;lt;/span&amp;gt;
{
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;LayerMask&amp;lt;/span&amp;gt; m_MagneticLayers;
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector3&amp;lt;/span&amp;gt; m_Position;
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;float&amp;lt;/span&amp;gt; m_Radius;
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;float&amp;lt;/span&amp;gt; m_Force;

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;FixedUpdate&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Collider&amp;lt;/span&amp;gt;[] colliders;
        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rigidbody&amp;lt;/span&amp;gt; rigidbody;

        colliders = &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Physics&amp;lt;/span&amp;gt;.OverlapSphere (transform.position + m_Position, m_Radius, m_MagneticLayers);
        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;foreach&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Collider&amp;lt;/span&amp;gt; collider &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;in&amp;lt;/span&amp;gt; colliders)
        {
            rigidbody = (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rigidbody&amp;lt;/span&amp;gt;) collider.gameObject.GetComponent (&amp;lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&amp;gt;typeof&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rigidbody&amp;lt;/span&amp;gt;));
            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (rigidbody == &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;null&amp;lt;/span&amp;gt;)
            {
                &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;continue&amp;lt;/span&amp;gt;;
            }
            rigidbody.AddExplosionForce (m_Force * -&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1&amp;lt;/span&amp;gt;, transform.position + m_Position, m_Radius);
        }
    }

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;OnDrawGizmosSelected&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Gizmos&amp;lt;/span&amp;gt;.color = &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Color&amp;lt;/span&amp;gt;.red;
        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Gizmos&amp;lt;/span&amp;gt;.DrawWireSphere (transform.position + m_Position, m_Radius);
    }
}&amp;lt;/span&amp;gt;&lt;/pre&gt;</description>
				<published>Sun Oct 04 00:00:00 +0200 2009</published>
				<link>http://angryant.com/2009/10/04/magnetic/</link>
			</item>
			
		
			
			<item>
				<title>GUI drag-drop</title>
				<description>&lt;p&gt;A lot of people have been asking for tips on how to implement drag-drop functionality in Unity &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; scripting, so I decided to put together a reusable script for the purpose.&lt;/p&gt;
&lt;p&gt;Basically the solution requires that your data class derives from GUIDraggableObject and at some point in its OnGUI method call Drag( Rect ) &amp;#8211; just like &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;.Window handles dragging.&lt;/p&gt;
&lt;p&gt;Right. Codez. First off the GUIDraggableObject.cs file:&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&amp;lt;span class=&quot;source source_csharp&quot;&amp;gt;&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;UnityEngine&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;System.Collections&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;class&amp;lt;/span&amp;gt; GUIDraggableObject
{
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;protected&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; m_Position;
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; m_DragStart;
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;bool&amp;lt;/span&amp;gt; m_Dragging;

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;GUIDraggableObject&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; position&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        m_Position = position;
    }

    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;bool&amp;lt;/span&amp;gt; Dragging
    {
        &amp;lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&amp;gt;get&amp;lt;/span&amp;gt;
        {
            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;return&amp;lt;/span&amp;gt; m_Dragging;
        }
    }

    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; Position
    {
        &amp;lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&amp;gt;get&amp;lt;/span&amp;gt;
        {
            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;return&amp;lt;/span&amp;gt; m_Position;
        }

        &amp;lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&amp;gt;set&amp;lt;/span&amp;gt;
        {
            m_Position = &amp;lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&amp;gt;value&amp;lt;/span&amp;gt;;
        }
    }

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public &amp;lt;/span&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;Drag&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rect&amp;lt;/span&amp;gt; draggingRect&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.type == &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;EventType&amp;lt;/span&amp;gt;.MouseUp)
        {
            m_Dragging = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;false&amp;lt;/span&amp;gt;;
        }
        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;else&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.type == &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;EventType&amp;lt;/span&amp;gt;.MouseDown &amp;amp;&amp;amp; draggingRect.Contains (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.mousePosition))
        {
            m_Dragging = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;true&amp;lt;/span&amp;gt;;
            m_DragStart = &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.mousePosition - m_Position;
            &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.Use();
        }

        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (m_Dragging)
        {
            m_Position = &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.mousePosition - m_DragStart;
        }
    }
}&amp;lt;/span&amp;gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;An example data class inheriting from GUIDraggableObject &amp;#8211; DataObject.cs:&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&amp;lt;span class=&quot;source source_csharp&quot;&amp;gt;&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;UnityEngine&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;System.Collections&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;class&amp;lt;/span&amp;gt; DataObject : GUIDraggableObject
&amp;lt;span class=&quot;comment comment_line comment_line_double-slash comment_line_double-slash_csharp&quot;&amp;gt;// This class just has the capability of being dragged in GUI - it could be any type of generic data class&amp;lt;/span&amp;gt;
{
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;string&amp;lt;/span&amp;gt; m_Name;
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;int&amp;lt;/span&amp;gt; m_Value;

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;DataObject&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;string&amp;lt;/span&amp;gt; name, &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;int&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&amp;gt;value&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; position&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt; : &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;base&amp;lt;/span&amp;gt; (position)
    {
        m_Name = name;
        m_Value = &amp;lt;span class=&quot;keyword keyword_other keyword_other_csharp&quot;&amp;gt;value&amp;lt;/span&amp;gt;;
    }

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public &amp;lt;/span&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;OnGUI&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rect&amp;lt;/span&amp;gt; drawRect = &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rect&amp;lt;/span&amp;gt; (m_Position.x, m_Position.y, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;100.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;100.0f&amp;lt;/span&amp;gt;), dragRect;

        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUILayout&amp;lt;/span&amp;gt;.BeginArea (drawRect, &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.skin.GetStyle (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Box&amp;lt;/span&amp;gt;&quot;));
            &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUILayout&amp;lt;/span&amp;gt;.Label (m_Name, &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.skin.GetStyle (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Box&amp;lt;/span&amp;gt;&quot;), &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUILayout&amp;lt;/span&amp;gt;.ExpandWidth (&amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;true&amp;lt;/span&amp;gt;));

            dragRect = &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUILayoutUtility&amp;lt;/span&amp;gt;.GetLastRect ();
            dragRect = &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rect&amp;lt;/span&amp;gt; (dragRect.x + m_Position.x, dragRect.y + m_Position.y, dragRect.width, dragRect.height);

            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (Dragging)
            {
                &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUILayout&amp;lt;/span&amp;gt;.Label (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Wooo...&amp;lt;/span&amp;gt;&quot;);
            }
            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;else&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUILayout&amp;lt;/span&amp;gt;.Button (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Yes!&amp;lt;/span&amp;gt;&quot;))
            {
                &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Debug&amp;lt;/span&amp;gt;.Log (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Yes. It is &amp;lt;/span&amp;gt;&quot; + m_Value + &quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;!&amp;lt;/span&amp;gt;&quot;);
            }
        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUILayout&amp;lt;/span&amp;gt;.EndArea ();

        Drag (dragRect);
    }
}&amp;lt;/span&amp;gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;And finally, this script demonstrates how you could have your data manager class use Unity &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; for data visualisation with drag-drop enabled &amp;#8211; MyMonoBehaviour.cs:&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&amp;lt;span class=&quot;source source_csharp&quot;&amp;gt;&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;UnityEngine&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;System.Collections&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;System.Collections.Generic&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;class&amp;lt;/span&amp;gt; MyMonoBehaviour : &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;MonoBehaviour&amp;lt;/span&amp;gt;
{
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; List&amp;lt; DataObject &amp;gt; m_Data = &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; List&amp;lt; DataObject &amp;gt; ();
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rect&amp;lt;/span&amp;gt; dropTargetRect = &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rect&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;30.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;30.0f&amp;lt;/span&amp;gt;);

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;Awake&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;One&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Two&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;2&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Three&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;3&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Four&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;4&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Five&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;5&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
    }

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public &amp;lt;/span&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;OnGUI&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        DataObject toFront, dropDead;
        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Color&amp;lt;/span&amp;gt; color;

        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.Box(dropTargetRect, &quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Die&amp;lt;/span&amp;gt;&quot;);

        toFront = dropDead = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;null&amp;lt;/span&amp;gt;;
        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;foreach&amp;lt;/span&amp;gt; (DataObject data &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;in&amp;lt;/span&amp;gt; m_Data)
        {
            color = &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.color;

            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (data.Dragging)
            {
                &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.color = dropTargetRect.Contains (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.mousePosition) ? &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Color&amp;lt;/span&amp;gt;.red : color;
            }

            data.OnGUI ();

            &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.color = color;

            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (data.Dragging)
            {
                &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (m_Data.IndexOf (data) != m_Data.Count - &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1&amp;lt;/span&amp;gt;)
                {
                    toFront = data;
                }
            }
        }

        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (toFront != &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;null&amp;lt;/span&amp;gt;)
        &amp;lt;span class=&quot;comment comment_line comment_line_double-slash comment_line_double-slash_csharp&quot;&amp;gt;// Move an object to front if needed&amp;lt;/span&amp;gt;
        {
            m_Data.Remove (toFront);
            m_Data.Add (toFront);
        }
    }
}
&amp;lt;/span&amp;gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Ah yea and an example of how you could do the same in an editor window &amp;#8211; MyEditorWindow.cs:&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&amp;lt;span class=&quot;source source_csharp&quot;&amp;gt;&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;UnityEngine&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;UnityEditor&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;System.Collections&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&amp;gt;&amp;lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&amp;gt;using&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&amp;gt;System.Collections.Generic&amp;lt;/span&amp;gt;;&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;class&amp;lt;/span&amp;gt; MyEditorWindow : &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;EditorWindow&amp;lt;/span&amp;gt;
{
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; List&amp;lt; DataObject &amp;gt; m_Data = &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; List&amp;lt; DataObject &amp;gt; ();
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;bool&amp;lt;/span&amp;gt; doRepaint = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;false&amp;lt;/span&amp;gt;;
    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rect&amp;lt;/span&amp;gt; dropTargetRect = &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Rect&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;30.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;30.0f&amp;lt;/span&amp;gt;);

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;public&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;MyEditorWindow&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;One&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Two&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;2&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Three&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;3&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Four&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;4&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
        m_Data.Add (&amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; DataObject (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Five&amp;lt;/span&amp;gt;&quot;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;5&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Vector2&amp;lt;/span&amp;gt; (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;), &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;20.0f&amp;lt;/span&amp;gt; * &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Random&amp;lt;/span&amp;gt;.Range (&amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1.0f&amp;lt;/span&amp;gt;, &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;10.0f&amp;lt;/span&amp;gt;))));
    }

    [&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;MenuItem&amp;lt;/span&amp;gt; (&quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Window/MyEditorWindow&amp;lt;/span&amp;gt;&quot;)]
&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public static &amp;lt;/span&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;Launch&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        GetWindow (&amp;lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&amp;gt;typeof&amp;lt;/span&amp;gt; (MyEditorWindow)).Show ();
    }

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public &amp;lt;/span&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;Update&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (doRepaint)
        {
            Repaint ();
        }
    }

&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;    &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;public &amp;lt;/span&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;OnGUI&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
    {
        DataObject toFront, dropDead;
        &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;bool&amp;lt;/span&amp;gt; previousState, flipRepaint;
        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Color&amp;lt;/span&amp;gt; color;

        &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.Box(dropTargetRect, &quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;Die&amp;lt;/span&amp;gt;&quot;);

        toFront = dropDead = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;null&amp;lt;/span&amp;gt;;
        doRepaint = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;false&amp;lt;/span&amp;gt;;
        flipRepaint = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;false&amp;lt;/span&amp;gt;;
        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;foreach&amp;lt;/span&amp;gt; (DataObject data &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;in&amp;lt;/span&amp;gt; m_Data)
        {
            previousState = data.Dragging;

            color = &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.color;

            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (previousState)
            {
                &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.color = dropTargetRect.Contains (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.mousePosition) ? &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Color&amp;lt;/span&amp;gt;.red : color;
            }

            data.OnGUI ();

            &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUI&amp;lt;/span&amp;gt;.color = color;

            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (data.Dragging)
            {
                doRepaint = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;true&amp;lt;/span&amp;gt;;

                &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (m_Data.IndexOf (data) != m_Data.Count - &amp;lt;span class=&quot;constant constant_numeric constant_numeric_csharp&quot;&amp;gt;1&amp;lt;/span&amp;gt;)
                {
                    toFront = data;
                }
            }
            &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;else&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (previousState)
            {
                flipRepaint = &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;true&amp;lt;/span&amp;gt;;

                &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (dropTargetRect.Contains (&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.mousePosition))
                {
                    dropDead = data;
                }
            }
        }

        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (toFront != &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;null&amp;lt;/span&amp;gt;)
        &amp;lt;span class=&quot;comment comment_line comment_line_double-slash comment_line_double-slash_csharp&quot;&amp;gt;// Move an object to front if needed&amp;lt;/span&amp;gt;
        {
            m_Data.Remove (toFront);
            m_Data.Add (toFront);
        }

        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (dropDead != &amp;lt;span class=&quot;constant constant_language constant_language_csharp&quot;&amp;gt;null&amp;lt;/span&amp;gt;)
        &amp;lt;span class=&quot;comment comment_line comment_line_double-slash comment_line_double-slash_csharp&quot;&amp;gt;// Destroy an object if needed&amp;lt;/span&amp;gt;
        {
            m_Data.Remove (dropDead);
        }

        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt; (flipRepaint)
        &amp;lt;span class=&quot;comment comment_line comment_line_double-slash comment_line_double-slash_csharp&quot;&amp;gt;// If some object just stopped being dragged, we should repaing for the state change&amp;lt;/span&amp;gt;
        {
            Repaint ();
        }
    }
}&amp;lt;/span&amp;gt;&lt;/pre&gt;</description>
				<published>Fri Sep 18 00:00:00 +0200 2009</published>
				<link>http://angryant.com/2009/09/18/gui-drag-drop/</link>
			</item>
			
		
			
			<item>
				<title>Logging an entire GameObject</title>
				<description>&lt;p&gt;More stuff from the shadowy corners of my hard-drive. Don&amp;#8217;t remember the context, but someone needed to log every single piece of information available on a particular GameObject. I suppose this could be useful for end-user &amp;#8220;This GameObject Just Went Completely &lt;span class=&quot;caps&quot;&gt;FUBAR&lt;/span&gt;&amp;#8221;&amp;#8482; scenarios.&lt;/p&gt;
&lt;p&gt;Anyway &amp;#8211; it has reflection in it which by definition makes it cool.&lt;/p&gt;
&lt;p&gt;Le codez:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Reflection&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; Utilities&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;comment comment_block comment_block_csharp&quot;&gt;/* &amp;#8230; */&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;LogGameObject&lt;/span&gt;&lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; gameObject, &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;bool&lt;/span&gt; children &lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt;[] components = gameObject.GetComponents( &lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;typeof&lt;/span&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt; ) );&lt;br /&gt;
        FieldInfo[] fields;&lt;br /&gt;
        PropertyInfo[] properties;&lt;/p&gt;
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Debug&lt;/span&gt;.Log( gameObject.name + &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;:&lt;/span&gt;&amp;quot; );
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt; component &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; components )
{
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Debug&lt;/span&gt;.Log( &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt; &amp;#8211; &lt;/span&gt;&amp;quot; + component.GetType().Name + &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;:&lt;/span&gt;&amp;quot; );
fields = component.GetType().GetFields();
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt;( FieldInfo field &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; fields )
{
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Debug&lt;/span&gt;.Log( &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt; .&lt;/span&gt;&amp;quot; + field.Name + &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt; = &lt;/span&gt;&amp;quot; + field.GetValue( component ) );
}
properties = component.GetType().GetProperties();
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt;( PropertyInfo property &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; properties )
{
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Debug&lt;/span&gt;.Log( &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt; .&lt;/span&gt;&amp;quot; + property.Name + &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt; = &lt;/span&gt;&amp;quot; + property.GetGetMethod().Invoke( component, &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;null&lt;/span&gt; ) );
}
}
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt;( children )
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Transform&lt;/span&gt; transform &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; gameObject.transform )
{
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Debug&lt;/span&gt;.Log( &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;&amp;#8594;&lt;/span&gt;&amp;quot; );
LogGameObject( transform.gameObject, children );
}
}
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;LogGameObject&lt;/span&gt;&lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; gameObject &lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        LogGameObject( gameObject, &lt;span class=&quot;constant constant_language constant_language_csharp&quot;&gt;false&lt;/span&gt; );&lt;br /&gt;
    }&lt;/p&gt;
&lt;span class=&quot;comment comment_block comment_block_csharp&quot;&gt;/* &amp;#8230; */&lt;/span&gt;
&lt;p&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;</description>
				<published>Thu Sep 17 00:00:00 +0200 2009</published>
				<link>http://angryant.com/2009/09/17/logging-an-entire-gameobject/</link>
			</item>
			
		
			
			<item>
				<title>I bet you can't type an A!</title>
				<description>&lt;p&gt;Keys got special meaning and shouldn&amp;#8217;t be fed into parts of the &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;? This handy little snippet takes care of that job:&lt;/p&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&amp;lt;span class=&quot;source source_csharp&quot;&amp;gt;&amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;private&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;string&amp;lt;/span&amp;gt; text = &quot;&amp;lt;span class=&quot;string string_quoted string_quoted_double string_quoted_double_csharp&quot;&amp;gt;I bet you can't type an A!&amp;lt;/span&amp;gt;&quot;;



&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;&amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;static &amp;lt;/span&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;DisableKeys&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;( &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;KeyCode&amp;lt;/span&amp;gt;[] keys &amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
{
    &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt;( !&amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.isKey )
    {
        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;return&amp;lt;/span&amp;gt;;
    }

    &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;foreach&amp;lt;/span&amp;gt;( &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;KeyCode&amp;lt;/span&amp;gt; key &amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;in&amp;lt;/span&amp;gt; keys )
    {
        &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;if&amp;lt;/span&amp;gt;( &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.keyCode == key )
        {
            &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;Event&amp;lt;/span&amp;gt;.current.Use();
        }
    }
}



&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;&amp;lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&amp;gt;static &amp;lt;/span&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;DisableKey&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;( &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;KeyCode&amp;lt;/span&amp;gt; key &amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
{
    DisableKeys( &amp;lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&amp;gt;new&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;KeyCode&amp;lt;/span&amp;gt;[]{ key } );
}



&amp;lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&amp;gt;&amp;lt;span class=&quot;storage storage_type storage_type_csharp&quot;&amp;gt;void&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&amp;gt;OnGUI&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&amp;gt;(&amp;lt;/span&amp;gt;)&amp;lt;/span&amp;gt;
{
    DisableKey( &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;KeyCode&amp;lt;/span&amp;gt;.A );
    text = &amp;lt;span class=&quot;support support_class support_class_unity&quot;&amp;gt;GUILayout&amp;lt;/span&amp;gt;.TextArea( text );
}&amp;lt;/span&amp;gt;&lt;/pre&gt;</description>
				<published>Mon Sep 07 00:00:00 +0200 2009</published>
				<link>http://angryant.com/2009/09/07/i-bet-you-cant-type-an-a/</link>
			</item>
			
		
			
			<item>
				<title>Where did that component go?</title>
				<description>&lt;p&gt;In larger Unity projects, components sometimes &amp;#8220;get lost&amp;#8221; &amp;#8211; you refactor something and there&amp;#8217;s an audio source still attached somewhere in your hierarchy and you simply cannot remember where.&lt;/p&gt;
&lt;p&gt;You&amp;#8217;re not the first one. A while ago I created a simple editor script to combat this issue as a response to a similar frustrated post on the Unity forums. Earlier this week I stumbled on the script again, picked it up and dusted it off a bit and decided to give it another chance to shine in some spotlight.&lt;/p&gt;
&lt;p&gt;Use:&lt;br /&gt;
&lt;ul&gt;&lt;br /&gt;
&lt;li&gt;Save the script as &lt;i&gt;ComponentLister.cs&lt;/i&gt;.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Place it in /Assets/Editor in your project.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Launch the window from the Component menu &amp;#8211; should be the last item titled &amp;#8220;Component lister&amp;#8221;.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;Click &amp;#8220;Refresh&amp;#8221; to list all components in your scene and the GameObjects to which they are attached.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;To investigate, click a GameObject name in the list and it will be set as the active selection in the hierarchy.&lt;/li&gt;&lt;/p&gt;
&lt;/ul&gt;
&lt;p&gt;Codes:&lt;br /&gt;
&lt;pre class=&quot;textmate-source idle&quot;&gt;&lt;span class=&quot;source source_csharp&quot;&gt;&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEngine&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;UnityEditor&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;meta meta_keyword meta_keyword_using meta_keyword_using_csharp&quot;&gt;&lt;span class=&quot;keyword keyword_other keyword_other_using&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_package entity_name_package_csharp&quot;&gt;System.Collections&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;class&lt;/span&gt; ComponentLister : EditorWindow&lt;br /&gt;
{&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; Hashtable sets = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; Hashtable();&lt;br /&gt;
    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Vector2&lt;/span&gt; scrollPosition;&lt;/p&gt;
[ &lt;span class=&quot;support support_class support_class_unity&quot;&gt;MenuItem&lt;/span&gt;( &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Component/Component lister&lt;/span&gt;&amp;quot; ) ]
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public static &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;Launch&lt;/span&gt;&lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        EditorWindow window = GetWindow( &lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;typeof&lt;/span&gt;( ComponentLister ) );&lt;br /&gt;
        window.Show();&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;UpdateList&lt;/span&gt;&lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Object&lt;/span&gt;[] objects;&lt;/p&gt;
sets.Clear();
objects = FindObjectsOfType( &lt;span class=&quot;keyword keyword_operator keyword_operator_csharp&quot;&gt;typeof&lt;/span&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt; ) );
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;Component&lt;/span&gt; component &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; objects )
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt;( !sets.ContainsKey( component.GetType() ) )
{
sets[ component.GetType() ] = &lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;new&lt;/span&gt; ArrayList();
}
( ( ArrayList )sets[ component.GetType() ] ).Add( component.gameObject );
}
}
&lt;p&gt;&lt;span class=&quot;meta meta_definition meta_definition_method meta_definition_method_csharp&quot;&gt;    &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;public &lt;/span&gt;&lt;span class=&quot;storage storage_type storage_type_csharp&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;entity entity_name entity_name_function entity_name_function_csharp&quot;&gt;OnGUI&lt;/span&gt;&lt;span class=&quot;meta meta_definition meta_definition_param-list meta_definition_param-list_csharp&quot;&gt;(&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;
    {&lt;br /&gt;
        &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginHorizontal( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;&lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt;&lt;/span&gt;.skin.GetStyle( &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Box&lt;/span&gt;&amp;quot; ) );&lt;br /&gt;
            &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Label( &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Components in scene:&lt;/span&gt;&amp;quot; );&lt;br /&gt;
            &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.FlexibleSpace();&lt;/p&gt;
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button( &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;Refresh&lt;/span&gt;&amp;quot; ) )
{
UpdateList();
}
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndHorizontal();
scrollPosition = &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.BeginScrollView(scrollPosition);
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt;( System.Type type &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; sets.Keys )
{
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Label( type.Name + &amp;#8220;&amp;#8221;string string_quoted string_quoted_double string_quoted_double_csharp&amp;quot;&amp;gt;:&lt;/span&gt;&amp;quot; );
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;foreach&lt;/span&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GameObject&lt;/span&gt; gameObject &lt;span class=&quot;storage storage_modifier storage_modifier_csharp&quot;&gt;in&lt;/span&gt; ( ArrayList )sets[ type ] )
{
&lt;span class=&quot;keyword keyword_control keyword_control_csharp&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.Button( gameObject.name ) )
{
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;Selection&lt;/span&gt;.activeObject = gameObject;
}
}
}
&lt;span class=&quot;support support_class support_class_unity&quot;&gt;GUILayout&lt;/span&gt;.EndScrollView();
}
&lt;p&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;</description>
				<published>Mon Aug 31 00:00:00 +0200 2009</published>
				<link>http://angryant.com/2009/08/31/where-did-that-component-go/</link>
			</item>
			
		
			
			<item>
				<title>UnitySteer</title>
				<description>&lt;p&gt;Ok so I&amp;#8217;ve been quite busy lately and so I haven&amp;#8217;t been updating the site as much as I should. In the beginning of July, UnitySteer was released. Ricardo Mendez of &lt;a href=&quot;http://arges-systems.com&quot;&gt;Arges Systems&lt;/a&gt; did the majority of the work and I did some early coding and design on the project.&lt;/p&gt;
&lt;p&gt;UnitySteer is a collection of steering behaviours &amp;#8211; enabling complex movement behaviour by combining the default behaviour set or creating new custom ones. The project is based on OpenSteerDotNet which is a .net port of OpenSteer. During the implementation of the Unity interface, however, a lot of the existing code base was either rewritten or discarded completely, so code based on the previous OpenSteer versions is not directly compatible.&lt;/p&gt;
&lt;p&gt;For more information, check out &lt;a href=&quot;http://www.arges-systems.com/articles/35/unitysteer-steering-components-for-unity&quot;&gt;Ricardo&amp;#8217;s blog post&lt;/a&gt; and the &lt;a href=&quot;http://github.com/ricardojmendez/UnitySteer/tree/master&quot;&gt;library&lt;/a&gt; and &lt;a href=&quot;http://github.com/ricardojmendez/UnitySteerExamples/tree/master&quot;&gt;examples&lt;/a&gt; repositories.&lt;/p&gt;
&lt;p&gt;UnitySteer is open source, released under the &lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;&lt;span class=&quot;caps&quot;&gt;MIT&lt;/span&gt; license&lt;/a&gt; .&lt;/p&gt;</description>
				<published>Wed Aug 19 00:00:00 +0200 2009</published>
				<link>http://angryant.com/2009/08/19/unitysteer/</link>
			</item>
			
		
			
			<item>
				<title>New and improved: Behave 1.0 released</title>
				<description>&lt;p&gt;After lots of late night tinkering, Behave 1.0 is finally out. This version fixes all known issues with unity 2.5, brings in lessons learned from Path 1.0 meaning a smashing new interface plus lots of new additions.&lt;/p&gt;
&lt;p&gt;The new tree editor contains interface improvements allowing for much faster tree building: A brand new component bar, sub-tree movement, integration with the standard unity inspector and more.&lt;/p&gt;
&lt;p&gt;In this version, the Behave runtime have also received an update. More runtime data is more easily available from the tree and library classes and methods implemented in your agent scripts are now mapped directly (by name) to action and decorator invokes.&lt;/p&gt;
&lt;p&gt;This site will be updated as soon as possible with all the changes and additions and the documentation will be brought up to speed.&lt;/p&gt;
&lt;p&gt;So what are you waiting for? Head on over to the downloads section and get your copy today!&lt;/p&gt;</description>
				<published>Mon May 18 00:00:00 +0200 2009</published>
				<link>http://angryant.com/2009/05/18/new-and-improved-behave-10-released/</link>
			</item>
			
		
			
			<item>
				<title>Behave 0.3b and unity 2.5</title>
				<description>&lt;p&gt;Apart from the hotfix, the following steps need to be followed when using Behave 0.3b in unity 2.5:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;When building an asset, make sure to use the shortcut for it and not the menu.&lt;/li&gt;
	&lt;li&gt;Behave.dll needs to be in a subfolder of your Assets folder named &amp;#8220;Assets&amp;#8221;. That is, for instance, &amp;#8220;MyProject/Assets/Assets/Behave.dll&amp;#8221;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;m currently working on a new version of Behave which will resolve these and other issues apart from adding new features.&lt;/p&gt;</description>
				<published>Wed Apr 08 00:00:00 +0200 2009</published>
				<link>http://angryant.com/2009/04/08/behave-03b-and-unity-25/</link>
			</item>
			
		
			
			<item>
				<title>Behave 0.3b hotfix</title>
				<description>&lt;p&gt;Changes in the unity 2.5 editor &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; has resulted in some bad issues in Behave 0.3b &amp;#8211; a hotfix to solve the most critical ones &amp;#8211; making the Behave editor interface usable again is available in the Behave downloads section.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll be working on a more extensive rewrite. Stay tuned.&lt;/p&gt;</description>
				<published>Fri Mar 20 00:00:00 +0100 2009</published>
				<link>http://angryant.com/2009/03/20/behave-03b-hotfix/</link>
			</item>
			
		
			
			<item>
				<title>Path tutorial video available</title>
				<description>&lt;p&gt;I just finished the first Path tutorial video. &lt;a href=&quot;/resources/path/TheBasics.mov&quot;&gt;Give it a look&lt;/a&gt;.&lt;/p&gt;</description>
				<published>Thu Mar 19 00:00:00 +0100 2009</published>
				<link>http://angryant.com/2009/03/19/path-tutorial-video-available/</link>
			</item>
			
		
			
			<item>
				<title>Path 1.0 launched!</title>
				<description>&lt;p&gt;Earlier today unity 2.5 launched so here we go! Path 1.0 and a pretty new website is now online. Victory!&lt;/p&gt;</description>
				<published>Wed Mar 18 00:00:00 +0100 2009</published>
				<link>http://angryant.com/2009/03/18/path-10-launched/</link>
			</item>
			
		
			
			<item>
				<title>Continued community tutorials</title>
				<description>&lt;p&gt;Arges from the unity community has been keeping busy. His latest tutorial goes more in-depth with Behave and unity, providing an interesting and useful example to work with.&lt;/p&gt;
&lt;p&gt;Have a read at &lt;a href=&quot;http://www.arges-systems.com/articles/14/behavior-trees-branching-paths-with-selectors&quot;&gt;http://www.arges-systems.com/articles/14/behavior-trees-branching-paths-with-selectors&lt;/a&gt; .&lt;/p&gt;</description>
				<published>Wed Dec 17 00:00:00 +0100 2008</published>
				<link>http://angryant.com/2008/12/17/community-tutorial-2/</link>
			</item>
			
		
			
			<item>
				<title>Community tutorial</title>
				<description>&lt;p&gt;Arges from the unity community just made a tutorial on Behave available. Check it out at &lt;a href=&quot;http://www.arges-systems.com/articles/2/behavior-trees-in-unity-with-behave&quot;&gt;http://www.arges-systems.com/articles/2/behavior-trees-in-unity-with-behave&lt;/a&gt; .&lt;/p&gt;</description>
				<published>Sun Nov 30 00:00:00 +0100 2008</published>
				<link>http://angryant.com/2008/11/30/community-tutorial/</link>
			</item>
			
		
			
			<item>
				<title>New tutorial</title>
				<description>&lt;p&gt;Just added a second tutorial &amp;#8220;Taking advantage of &lt;span class=&quot;caps&quot;&gt;OOP&lt;/span&gt; in agents&amp;#8221;. It is now available in the Tutorials section of the Documentation page.&lt;/p&gt;</description>
				<published>Fri Nov 28 00:00:00 +0100 2008</published>
				<link>http://angryant.com/2008/11/28/new-tutorial/</link>
			</item>
			
		
			
			<item>
				<title>First tutorial available</title>
				<description>&lt;p&gt;Check it out in the Tutorials section of the Documentation page.&lt;/p&gt;</description>
				<published>Tue Nov 04 00:00:00 +0100 2008</published>
				<link>http://angryant.com/2008/11/04/first-tutorial-available/</link>
			</item>
			
		
			
			<item>
				<title>Behave 0.3b</title>
				<description>&lt;p&gt;Fixes and additions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Various tweaks to the editor UI&lt;/li&gt;
	&lt;li&gt;Optimised the compiler&lt;/li&gt;
	&lt;li&gt;Fixed the following editor bugs from the bug list:
	&lt;ul&gt;
		&lt;li&gt;When the editor scrips are recompiled and when the user enters and exits play mode, running editors will loose references, causing undetermined behaviour&lt;/li&gt;
		&lt;li&gt;When a compile fails, the Behave compiler is locked and unusable &amp;#8211; requiring a unity relaunch&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;Implemented the following wishlist items:
	&lt;ul&gt;
		&lt;li&gt;Behaviour tree decorators&lt;/li&gt;
		&lt;li&gt;Stand-alone edition of the Behave editor&lt;/li&gt;
		&lt;li&gt;Behaviour tree debugging features&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Sun Nov 02 00:00:00 +0100 2008</published>
				<link>http://angryant.com/2008/11/02/behave-03b/</link>
			</item>
			
		
			
			<item>
				<title>unite '08 open-mic session</title>
				<description>&lt;p&gt;At this years unite, David and Tom (of unity3D) persuaded me to do an open mic session a day into the conference. I&amp;#8217;ve been informed that this session was captured on video, so as soon as it is available to me, I&amp;#8217;ll make it available here. I had one day of preparation for this while attending the conference, so I have no idea of its usefulness, but I guess it&amp;#8217;s better than nothing. Stay tuned.&lt;/p&gt;</description>
				<published>Sat Oct 25 00:00:00 +0200 2008</published>
				<link>http://angryant.com/2008/10/25/unite-08-open-mic-session/</link>
			</item>
			
		
			
			<item>
				<title>Behave 0.2b</title>
				<description>&lt;p&gt;Fixes and additions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Made the demo project a whole lot more interesting&lt;/li&gt;
	&lt;li&gt;Implemented the editor wish list item: Ability to move trees between collections&lt;/li&gt;
	&lt;li&gt;Various tweaks to the editor UI&lt;/li&gt;
	&lt;li&gt;Fixed a ton of bugs in the compiler&lt;/li&gt;
	&lt;li&gt;Fixed the following editor bugs from the bug list:
	&lt;ul&gt;
		&lt;li&gt;Not able to delete collections from library&lt;/li&gt;
		&lt;li&gt;Not able to delete trees from library&lt;/li&gt;
		&lt;li&gt;Not able to rename collections from library&lt;/li&gt;
		&lt;li&gt;Not able to rename trees from library&lt;/li&gt;
		&lt;li&gt;Missing &amp;#8220;tree has been changed, save changes?&amp;#8221; dialog&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Wed Sep 24 00:00:00 +0200 2008</published>
				<link>http://angryant.com/2008/09/24/behave-02b/</link>
			</item>
			
		
			
			<item>
				<title>Behave 0.1b</title>
				<description>&lt;p&gt;Fixes and additions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Some documentation is available&lt;/li&gt;
	&lt;li&gt;Compiler is now creating sensible output&lt;/li&gt;
	&lt;li&gt;A simple test tree and script using it is provided with the demo&lt;/li&gt;
	&lt;li&gt;Documentation is linked directly from the unity help menu&lt;/li&gt;
	&lt;li&gt;Less spamming of the log with debug information&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Tue Sep 09 00:00:00 +0200 2008</published>
				<link>http://angryant.com/2008/09/09/behave-01b/</link>
			</item>
			
		
			
			<item>
				<title>Behave pre-release</title>
				<description>&lt;p&gt;The purpose of this pre-release is to let the curious try the waters. It is shiny, but don&amp;#8217;t build a project around it just yet.&lt;/p&gt;
&lt;p&gt;Currently the editor is functional, assets can be loaded and saved, the compiler runs and results can be tested. However some minor features are not yet available in the editor, compile results are faulty to say the least and very little testing has been done. Run it at your own risk as usual.&lt;/p&gt;
&lt;p&gt;Finally the license will be revised. Currently I just duplicated the license from the Path project in order to get this boat floating asap. Documentation will be available shortly.&lt;/p&gt;
&lt;p&gt;Specs:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Available for indie as well as pro&lt;/li&gt;
	&lt;li&gt;Can run in webplayers as well as stand-alone&lt;/li&gt;
	&lt;li&gt;Requires no additional installations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Features:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Implements behaviour trees&lt;/li&gt;
	&lt;li&gt;Re-use common behaviour by reference&lt;/li&gt;
	&lt;li&gt;Drag and drop editor interface inside the unity editor&lt;/li&gt;
	&lt;li&gt;Simple connection to character actions via C# interface&lt;/li&gt;
	&lt;li&gt;Designed trees are built to .net assembly code for maximum performance&lt;/li&gt;
&lt;/ul&gt;</description>
				<published>Mon Sep 08 00:00:00 +0200 2008</published>
				<link>http://angryant.com/2008/09/08/behave-pre-release/</link>
			</item>
			
		
			
			<item>
				<title>Path beta 0.3b</title>
				<description>&lt;p&gt;Fixed some more bugs and improved on the path seeking algorithm which is now not limited to a single orientation of an entire mesh. For instance a PathFinder will now be able to walk up the walls, across the ceiling and back onto the floor if you so desire.&lt;/p&gt;</description>
				<published>Tue Apr 15 00:00:00 +0200 2008</published>
				<link>http://angryant.com/2008/04/15/path-beta-03b/</link>
			</item>
			
		
			
			<item>
				<title>Path beta 0.2b</title>
				<description>&lt;p&gt;In this version several bugfixes have been implemented and additional debugging information has been made available. See online documentation for more information on bug reporting.&lt;/p&gt;</description>
				<published>Sat Apr 12 00:00:00 +0200 2008</published>
				<link>http://angryant.com/2008/04/12/path-beta-02b/</link>
			</item>
			
		
			
			<item>
				<title>Path beta 0.1b</title>
				<description>&lt;p&gt;In this version, the interface of the Path library has gone through some radical changes and should be much easier to use and adapt to special needs.&lt;/p&gt;
&lt;p&gt;The demo project now also includes a unit controller for units using the unity character controller interface which also demos how animation could be used in Path projects.&lt;/p&gt;
&lt;p&gt;Also a range of bugs have been corrected (and no doubt new ones introduces so please toss all the feedback you can come by at me). Last but not the least Path is now almost feature complete which means feature requests will be considered at this point.&lt;/p&gt;
&lt;p&gt;Dig in!&lt;/p&gt;</description>
				<published>Sat Apr 05 00:00:00 +0200 2008</published>
				<link>http://angryant.com/2008/04/05/path-beta-01b/</link>
			</item>
			
		
			
			<item>
				<title>Path pre-release</title>
				<description>&lt;p&gt;This version of the Path project implements the A* algorithm on a user-provided NavMesh. It includes support for multiple inter-connected NavMeshes in one scene and provides an easy to use interface for requesting and handling calculated pathes.&lt;/p&gt;
&lt;p&gt;Updates and feedback takes place on the unity forums: Pathfinding in unity.&lt;/p&gt;</description>
				<published>Sun Mar 30 00:00:00 +0100 2008</published>
				<link>http://angryant.com/2008/03/30/path-pre-release/</link>
			</item>
			
		
	</channel>
</rss>